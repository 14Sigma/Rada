{
  "_id": "form:immunization_visit",
  "type": "form",
  "internalId": "immunization_visit",
  "title": [
    {
      "locale": "en",
      "content": "Immunization Visit"
    },
    {
      "locale": "hi",
      "content": "टीकाकरण की जांच"
    },
    {
      "locale": "id",
      "content": "Immunization Visit"
    }
  ],
  "context": {
    "person": true,
    "place": false,
    "expression": "!contact || (summary.use_cases && summary.use_cases.imm && contact.type === 'person' && (!contact.date_of_birth || ageInYears(contact) <= 5))"
  },
  "icon": "immunization",
  "_attachments": {
    "xml": {
      "content_type": "application/xml",
      "revpos": 96,
      "digest": "md5-zF7/R4sqlw1lb+Z+GcWAFw==",
      "data": "<?xml version="1.0"?>
<h:html xmlns="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:jr="http://openrosa.org/javarosa" xmlns:orx="http://openrosa.org/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <h:head>
    <h:title>Immunization Visit</h:title>
    <model>
      <itext>
        <translation lang="hi">
          <text id="/immunization_visit/vaccines_received/received_hpv_2:label">
            <value>HPV 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/typhoid:label">
            <value>Typhoid</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm/yes:label">
            <value>हाँ</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus:label">
            <value><output value=" /immunization_visit/patient_name "/> को Rotavirus का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN4:label">
            <value>Meningococcal 4</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/HA1:label">
            <value>Hepatitis A 1</value>
          </text>
          <text id="/immunization_visit/group_jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv:label">
            <value><output value=" /immunization_visit/patient_name "/> को MMRV का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_1:label">
            <value>Polio 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV2:label">
            <value>Pneumococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmrv_1:label">
            <value>MMRV 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH1:label">
            <value>Cholera 1</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever:label">
            <value>क्या <output value=" /immunization_visit/patient_name "/> को Yellow Fever टीकाकरण मिला ?</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:jr:constraintMsg">
            <value>आपका सन्देश 5 SMS से ऊपर नहीं हो सकता है | कृपया SMS का मूल्य को कम करने के लिए अपना सन्देश छोटा करें |</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal:label">
            <value>Pneumococcal Pneumonia</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmrv_2:label">
            <value>MMRV 2 मिला</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_3:label">
            <value>Meningococcal 3 मिला</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc:label">
            <value>क्या <output value=" /immunization_visit/patient_name "/> को Japanese Encephalitis टीकाकरण मिला ?</value>
          </text>
          <text id="/immunization_visit/group_review/r_hep_a_2:label">
            <value>Hepatitis A 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_4:label">
            <value>Pneimococcal 4</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_3:label">
            <value>Rotavirus 3 मिला</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/MMRV1:label">
            <value>MMRV 1</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:hint">
            <value><output value=" /immunization_visit/chw_name "/> (<output value=" /immunization_visit/chw_phone "/>) को संदेश भेजा जायेगा | संदेश की लंबाई सीमित है ताकी SMS का मूल्य उच्च ना हो|</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_review/r_bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines:label">
            <value>टीकाकरण चुनें</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a/yes:label">
            <value>हाँ</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmr_2:label">
            <value>MMR 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines:hint">
            <value>लागू होने वाले सभी का चयन करें</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup_note2:label">
            <value><output value=" /immunization_visit/chw_sms "/></value>
          </text>
          <text id="/immunization_visit/inputs/contact/_id:label">
            <value>मरीज का नाम क्या है?</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited/yes:label">
            <value>हाँ</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_vitamin_a:label">
            <value>Vitamin A मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_hep_a_1:label">
            <value>Hepatitis A 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup_note1:label">
            <value>** ये SMS के रूप में <output value=" /immunization_visit/chw_name "/> <output value=" /immunization_visit/chw_phone "/> को भेजा जायेगा **</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/hep_a:label">
            <value>Hepatitis A</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a/no:label">
            <value>नहीं</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_1:label">
            <value>Pneimococcal 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmr_1:label">
            <value>MMR 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV1:label">
            <value>Rotavirus 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_4:label">
            <value>Meningococcal 4 मिला</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc/no:label">
            <value>नहीं</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines:label">
            <value>आप आज कौनसे टीकाकरण पे रिपोर्ट दर्ज करना चाहेंगे ?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_jap_enc:label">
            <value>Japanese Encephalitis मिला</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT1:label">
            <value>Pentavalent 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_1:label">
            <value>Rotavirus 1</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms_note:label">
            <value>**यह सन्देश ऐसे ही भेजा जा सकता है या आप इस को बदल कर भी भेज सकते है**
 <output value=" /immunization_visit/group_note/default_chw_sms_text "/></value>
          </text>
          <text id="/immunization_visit/group_review/r_penta_3:label">
            <value>Pentavalent 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_2:label">
            <value>Rotavirus 2</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV1:label">
            <value>Pneumococcal 1</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/group_review/r_pregnancy_details:label">
            <value>**<output value=" /immunization_visit/patient_name "/>** ID : <output value=" /immunization_visit/group_review/r_patient_id "/></value></text>
          <text id="/immunization_visit/inputs/contact/parent/contact/phone:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/mmrv:label">
            <value>MMRV (Measles, Mumps, Rubella, Varicella)</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/patient_phone:label">
            <value>मरीज का फोन नंबर</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hpv_3:label">
            <value>HPV 3 मिला</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_bcg:label">
            <value>BCG मिला</value>
          </text>
          <text id="/immunization_visit/group_hep_a:label">
            <value>Hepatitis A</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera:label">
            <value><output value=" /immunization_visit/patient_name "/> को Cholera का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent:label">
            <value><output value=" /immunization_visit/patient_name "/> को Pentavalent का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN3:label">
            <value>Meningococcal 3</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg:label">
            <value>क्या <output value=" /immunization_visit/patient_name "/> को BCG टीकाकरण मिला ?</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV3:label">
            <value>Rotavirus 3</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_2:label">
            <value>Rotavirus 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/submit:label">
            <value>**सुनिश्चित करें के यह कार्रवाई पूरा करने के लिए आप सबमिट दबाये |**</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal:label">
            <value><output value=" /immunization_visit/patient_name "/> को Pneumococcal Pneumonia का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/inputs/contact/name:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/rotavirus:label">
            <value>Rotavirus</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH3:label">
            <value>Cholera 3</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/polio:label">
            <value>Polio</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmrv_1:label">
            <value>MMRV 1</value>
          </text>
          <text id="/immunization_visit/group_cholera:label">
            <value>Cholera</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/HA2:label">
            <value>Hepatitis A 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/mmr:label">
            <value>MMR (Measles, Mumps, Rubella)</value>
          </text>
          <text id="/immunization_visit/inputs/contact/phone:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_1:label">
            <value>Cholera 1</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV3:label">
            <value>HPV 3</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited/no:label">
            <value>नहीं</value>
          </text>
          <text id="/immunization_visit/group_review/r_yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/patient_uuid:label">
            <value>मरीज UUID</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV3:label">
            <value>Pneumococcal 3</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT2:label">
            <value>Pentavalent 2</value>
          </text>
          <text id="/immunization_visit/group_hpv:label">
            <value>HPV (Human Papillomavirus)</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV2:label">
            <value>HPV 2</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm:label">
            <value>क्या <output value=" /immunization_visit/patient_name "/> अपने टीकाकरण के लिए आये ?</value>
          </text>
          <text id="/immunization_visit/inputs/contact/_id:hint">
            <value>सूची में से एक व्यक्ति को चुनें</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit:label">
            <value>जांच की जानकारी &lt;i class="fa fa-plus-square"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_2:label">
            <value>Pentavalent 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_3:label">
            <value>HPV 3</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal:label">
            <value><output value=" /immunization_visit/patient_name "/> को Meningococcal का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv:label">
            <value><output value=" /immunization_visit/patient_name "/> को HPV का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN1:label">
            <value>Meningococcal 1</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever/yes:label">
            <value>हाँ</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_review/r_jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_pentavalent:label">
            <value>Pentavalent</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_flu:label">
            <value>Flu मिला</value>
          </text>
          <text id="/immunization_visit/group_chw_info/call_button:label">
            <value>**कृपया <output value=" /immunization_visit/chw_name "/> के साथ मिल कर देखे के क्या <output value=" /immunization_visit/patient_name "/> अपने टीकाकरण के लिए आये |** कॉल: <output value=" /immunization_visit/chw_phone "/></value></text>
          <text id="/immunization_visit/group_review/r_mmr_1:label">
            <value>MMR 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_1:label">
            <value>HPV 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_4:label">
            <value>Meningococcal 4</value>
          </text>
          <text id="/immunization_visit/patient_age_in_years:label">
            <value>साल</value>
          </text>
          <text id="/immunization_visit/group_chw_info:label">
            <value>लापता जांच की रिपोर्टों</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_3:label">
            <value>Meningococcal 3</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_yellow_fever:label">
            <value>Yellow Fever मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_2:label">
            <value>Oral Polio 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV3:label">
            <value>Oral Polio 3</value>
          </text>
          <text id="/immunization_visit/vaccines_received:label">
            <value>प्राप्त किये गए टीके</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV2:label">
            <value>Rotavirus 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV2:label">
            <value>Oral Polio 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hep_a_1:label">
            <value>Hepatitis A 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/inputs/contact/parent/contact/name:label">
            <value></value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_1:label">
            <value>Pneumococcal 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_2:label">
            <value>Cholera 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_2:label">
            <value>Meningococcal 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/meningococcal:label">
            <value>Meningococcal</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/hpv:label">
            <value>HPV (Human Papillomavirus)</value>
          </text>
          <text id="/immunization_visit/group_rotavirus:label">
            <value>Rotavirus</value>
          </text>
          <text id="/immunization_visit/chw_sms:label">
            <value>सामुदायिक स्वास्थ्य कर्मी का नोट</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_4:label">
            <value>Pneumococcal 4 मिला</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms:label">
            <value>-</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/cholera:label">
            <value>Cholera</value>
          </text>
          <text id="/immunization_visit/group_mmrv:label">
            <value>MMR (Measles, Mumps, Rubella, Varicella)</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_3:label">
            <value>Pentavalent 3 मिला</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:label">
            <value>यह सन्देश ऐसे ही भेजा जा सकता है या आप इस को बदल कर भी भेज सकते है</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_2:label">
            <value>Pneumococcal 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/MMR2:label">
            <value>MMR 2</value>
          </text>
          <text id="/immunization_visit/inputs/contact/sex:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_meningococcal:label">
            <value>Meningococcal</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_typhoid_2:label">
            <value>Typhoid 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/pneumococcal:label">
            <value>Pneumococcal Pneumonia</value>
          </text>
          <text id="/immunization_visit/group_review/r_penta_2:label">
            <value>Pentavalent 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_1:label">
            <value>Oral Polio 1</value>
          </text>
          <text id="/immunization_visit/chw_phone:label">
            <value>सामुदायिक स्वास्थ्य कर्मी का फोन नंबर</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit_no:label">
            <value>टीकाकरण की जांच पूरी नहीं की गयी है</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms/did_not_attend:label">
            <value>-</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_0:label">
            <value>जन्म पे Polio मिला</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN2:label">
            <value>Meningococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_2:label">
            <value>Cholera 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_typhoid_1:label">
            <value>Typhoid 1</value>
          </text>
          <text id="/immunization_visit/group_note:label">
            <value>सामुदायिक स्वास्थ्य कर्मी के लिए नोट</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit_yes:label">
            <value>टीकाकरण की जांच पूरी की गयी है</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_2:label">
            <value>HPV 2</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/MMRV2:label">
            <value>MMRV 2</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited:label">
            <value>क्या आप सन्देश में कुछ जोड़ना या बदलना चाहते है?</value>
          </text>
          <text id="/immunization_visit/inputs:label">
            <value>मरीज</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid:label">
            <value><output value=" /immunization_visit/patient_name "/> को Typhoid का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/group_review/r_vaccines_given:label">
            <value>दिए गए टीकाकरण</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc/yes:label">
            <value>हाँ</value>
          </text>
          <text id="/immunization_visit/group_review/r_penta_1:label">
            <value>Pentavalent 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_2:label">
            <value>Pneimococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmr_2:label">
            <value>MMR 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_3:label">
            <value>Cholera 3</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr:label">
            <value><output value=" /immunization_visit/patient_name "/> को MMR का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio:label">
            <value><output value=" /immunization_visit/patient_name "/> को Polio का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms/default:label">
            <value>-</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH2:label">
            <value>Cholera 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV0:label">
            <value>जन्म पे Polio</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_typhoid_1:label">
            <value>Typhoid 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/TY1:label">
            <value>Typhoid 1</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/penta:label">
            <value>Pentavalent</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg/no:label">
            <value>नहीं</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/flu:label">
            <value>Influenza</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hep_a_2:label">
            <value>Hepatitis A 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_3:label">
            <value>Oral Polio 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmrv_2:label">
            <value>MMRV 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_1:label">
            <value>Rotavirus 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_3:label">
            <value>Rotavirus 3</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a:label">
            <value><output value=" /immunization_visit/patient_name "/> को Hepatitis का कौनसा डोज़ मिला ?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_3:label">
            <value>Cholera 3 मिला</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg/yes:label">
            <value>हाँ</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/patient_name:label">
            <value>मरीज का नाम</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV1:label">
            <value>HPV 1</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/TY2:label">
            <value>Typhoid 2</value>
          </text>
          <text id="/immunization_visit/patient_id:label">
            <value>मरीज का ID</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/MMR1:label">
            <value>MMR 1</value>
          </text>
          <text id="/immunization_visit/group_polio:label">
            <value>Polio</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_1:label">
            <value>Meningococcal 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_1:label">
            <value>Meningococcal 1</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm/no:label">
            <value>नहीं</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_0:label">
            <value>जन्म पे Polio</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu:label">
            <value>क्या <output value=" /immunization_visit/patient_name "/> को flu का टीकाकरण मिला ?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hpv_1:label">
            <value>HPV 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV1:label">
            <value>Oral Polio 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_2:label">
            <value>Polio 2 मिला</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_2:label">
            <value>Meningococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_3:label">
            <value>Polio 3 मिला</value>
          </text>
          <text id="/immunization_visit/chw_name:label">
            <value>सामुदायिक स्वास्थ्य कर्मी का नाम</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/group_bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/group_flu:label">
            <value>Influenza</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup:label">
            <value>सुनिश्चित करने के लिए सन्देश &lt;i class="fa fa-envelope"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/group_review/r_typhoid_2:label">
            <value>Typhoid 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_flu:label">
            <value>Flu</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_3:label">
            <value>Pneimococcal 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_summary:label">
            <value>मरीज़ की जानकारी &lt;i class="fa fa-user"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/inputs/contact/date_of_birth:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_chw_info/chw_information:label">
            <value><output value=" /immunization_visit/patient_name "/> के जांच की रिपोर्ट दर्ज नहीं की गयी है</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a:label">
            <value>क्या <output value=" /immunization_visit/patient_name "/> को Vitamin A टीकाकरण मिला ?</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/none:label">
            <value>कोई नहीं</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV4:label">
            <value>Pneumococcal 4</value>
          </text>
          <text id="/immunization_visit/group_mmr:label">
            <value>MMR (Measles, Mumps, Rubella)</value>
          </text>
          <text id="/immunization_visit/group_typhoid:label">
            <value>Typhoid</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_1:label">
            <value>Pentavalent 1 मिला</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu/yes:label">
            <value>हाँ</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT3:label">
            <value>Pentavalent 3</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv:jr:constraintMsg">
            <value>अगर कोई और डोज़ चयनित हो तोह आप 'कोई नहीं' को नहीं चुन सकते है |</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_1:label">
            <value>Cholera 1 मिला</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_3:label">
            <value>Pneumococcal 3 मिला</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu/no:label">
            <value>नहीं</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever/no:label">
            <value>नहीं</value>
          </text>
          <text id="/immunization_visit/inputs/contact/patient_id:label">
            <value></value>
          </text>
        </translation>
        <translation lang="en">
          <text id="/immunization_visit/vaccines_received/received_hpv_2:label">
            <value>Received HPV 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/typhoid:label">
            <value>Typhoid</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm/yes:label">
            <value>Yes</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus:label">
            <value>Which dose of Rotavirus did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN4:label">
            <value>Meningococcal 4</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/HA1:label">
            <value>Hepatitis A 1</value>
          </text>
          <text id="/immunization_visit/group_jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv:label">
            <value>Which dose of MMRV did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_1:label">
            <value>Received Polio 1</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV2:label">
            <value>Pneumococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmrv_1:label">
            <value>Received MMRV 1</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH1:label">
            <value>Cholera 1</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever:label">
            <value>Did <output value=" /immunization_visit/patient_name "/> receive the Yellow Fever vaccine?</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:jr:constraintMsg">
            <value>Your message cannot be longer than 5 SMS messages. Please shorten your message to reduce SMS costs.</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal:label">
            <value>Pneumococcal Pneumonia</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmrv_2:label">
            <value>Received MMRV 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_3:label">
            <value>Received Meningococcal 3</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc:label">
            <value>Did <output value=" /immunization_visit/patient_name "/> receive the Japanese Encephalitis vaccine?</value>
          </text>
          <text id="/immunization_visit/group_review/r_hep_a_2:label">
            <value>Hepatitis A 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_4:label">
            <value>Pneumococcal 4</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_3:label">
            <value>Received Rotavirus 3</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/MMRV1:label">
            <value>MMRV 1</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:hint">
            <value>Messages are limited in length to avoid high SMS costs.</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_review/r_bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines:label">
            <value>Select Vaccines</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a/yes:label">
            <value>Yes</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmr_2:label">
            <value>MMR 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines:hint">
            <value>Select all that apply</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup_note2:label">
            <value><output value=" /immunization_visit/chw_sms "/></value>
          </text>
          <text id="/immunization_visit/inputs/contact/_id:label">
            <value>What is the patient's name?</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited/yes:label">
            <value>Yes</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_vitamin_a:label">
            <value>Received Vitamin A</value>
          </text>
          <text id="/immunization_visit/group_review/r_hep_a_1:label">
            <value>Hepatitis A 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup_note1:label">
            <value>**The following will be sent as a SMS to <output value=" /immunization_visit/chw_name "/> <output value=" /immunization_visit/chw_phone "/>**</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/hep_a:label">
            <value>Hepatitis A</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a/no:label">
            <value>No</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_1:label">
            <value>Pneumococcal 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmr_1:label">
            <value>Received MMR 1</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV1:label">
            <value>Rotavirus 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_4:label">
            <value>Received Meningococcal 4</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc/no:label">
            <value>No</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines:label">
            <value>Which vaccines would you like to report on today?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_jap_enc:label">
            <value>Received Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT1:label">
            <value>Pentavalent 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_1:label">
            <value>Rotavirus 1</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms_note:label">
            <value>**The following message will be sent to <output value=" /immunization_visit/chw_name "/> (<output value=" /immunization_visit/chw_phone "/>):**
 <output value=" /immunization_visit/group_note/default_chw_sms_text "/></value></text>
          <text id="/immunization_visit/group_review/r_penta_3:label">
            <value>Pentavalent 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_2:label">
            <value>Rotavirus 2</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV1:label">
            <value>Pneumococcal 1</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/group_review/r_pregnancy_details:label">
            <value>**<output value=" /immunization_visit/patient_name "/>**
ID: <output value=" /immunization_visit/group_review/r_patient_id "/></value></text>
          <text id="/immunization_visit/inputs/contact/parent/contact/phone:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/mmrv:label">
            <value>MMRV (Measles, Mumps, Rubella, Varicella)</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/patient_phone:label">
            <value>Patient Phone</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hpv_3:label">
            <value>Received HPV 3</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_bcg:label">
            <value>Received BCG</value>
          </text>
          <text id="/immunization_visit/group_hep_a:label">
            <value>Hepatitis A</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera:label">
            <value>Which dose of Cholera did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent:label">
            <value>Which dose of Pentavalent did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN3:label">
            <value>Meningococcal 3</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg:label">
            <value>Did <output value=" /immunization_visit/patient_name "/> receive the BCG vaccine?</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV3:label">
            <value>Rotavirus 3</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_2:label">
            <value>Received Rotavirus 2</value>
          </text>
          <text id="/immunization_visit/group_review/submit:label">
            <value>**Be sure you Submit to complete this action.**</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal:label">
            <value>Which dose of Pneumococcal Pneumonia did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/inputs/contact/name:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/rotavirus:label">
            <value>Rotavirus</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH3:label">
            <value>Cholera 3</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/polio:label">
            <value>Polio</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmrv_1:label">
            <value>MMRV 1</value>
          </text>
          <text id="/immunization_visit/group_cholera:label">
            <value>Cholera</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/HA2:label">
            <value>Hepatitis A 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/mmr:label">
            <value>MMR (Measles, Mumps, Rubella)</value>
          </text>
          <text id="/immunization_visit/inputs/contact/phone:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_1:label">
            <value>Cholera 1</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV3:label">
            <value>HPV 3</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited/no:label">
            <value>No</value>
          </text>
          <text id="/immunization_visit/group_review/r_yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/patient_uuid:label">
            <value>Patient UUID</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV3:label">
            <value>Pneumococcal 3</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT2:label">
            <value>Pentavalent 2</value>
          </text>
          <text id="/immunization_visit/group_hpv:label">
            <value>HPV (Human Papillomavirus)</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV2:label">
            <value>HPV 2</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm:label">
            <value>Did <output value=" /immunization_visit/patient_name "/> attend their immunization visit?</value>
          </text>
          <text id="/immunization_visit/inputs/contact/_id:hint">
            <value>Select a person from list</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit:label">
            <value>Visit Information&lt;i class="fa fa-plus-square"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_2:label">
            <value>Received Pentavalent 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_3:label">
            <value>HPV 3</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal:label">
            <value>Which dose of Meningococcal did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv:label">
            <value>Which dose of HPV did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN1:label">
            <value>Meningococcal 1</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever/yes:label">
            <value>Yes</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_review/r_jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_pentavalent:label">
            <value>Pentavalent</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_flu:label">
            <value>Received Flu</value>
          </text>
          <text id="/immunization_visit/group_chw_info/call_button:label">
            <value>**Please follow up with <output value=" /immunization_visit/chw_name "/> to see if <output value=" /immunization_visit/patient_name "/> attended their immunization visit.**
Call: <output value=" /immunization_visit/chw_phone "/></value></text>
          <text id="/immunization_visit/group_review/r_mmr_1:label">
            <value>MMR 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_1:label">
            <value>HPV 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_4:label">
            <value>Meningococcal 4</value>
          </text>
          <text id="/immunization_visit/patient_age_in_years:label">
            <value>Years</value>
          </text>
          <text id="/immunization_visit/group_chw_info:label">
            <value>Missing Visit Report</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_3:label">
            <value>Meningococcal 3</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_yellow_fever:label">
            <value>Received Yellow Fever</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_2:label">
            <value>Oral Polio 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV3:label">
            <value>Oral Polio 3</value>
          </text>
          <text id="/immunization_visit/vaccines_received:label">
            <value>Vaccines Received</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV2:label">
            <value>Rotavirus 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV2:label">
            <value>Oral Polio 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hep_a_1:label">
            <value>Received Hepatitis A 1</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/inputs/contact/parent/contact/name:label">
            <value></value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_1:label">
            <value>Received Pneumococcal 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_2:label">
            <value>Cholera 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_2:label">
            <value>Received Meningococcal 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/meningococcal:label">
            <value>Meningococcal</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/hpv:label">
            <value>HPV (Human Papillomavirus)</value>
          </text>
          <text id="/immunization_visit/group_rotavirus:label">
            <value>Rotavirus</value>
          </text>
          <text id="/immunization_visit/chw_sms:label">
            <value>CHW's Note</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_4:label">
            <value>Received Pneumococcal 4</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms:label">
            <value>Default SMS to send to CHW</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/cholera:label">
            <value>Cholera</value>
          </text>
          <text id="/immunization_visit/group_mmrv:label">
            <value>MMRV (Measles, Mumps, Rubella, Varicella)</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_3:label">
            <value>Received Pentavalent 3</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:label">
            <value>You can add a personal note to the SMS here:</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_2:label">
            <value>Received Pneumococcal 2</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/MMR2:label">
            <value>MMR 2</value>
          </text>
          <text id="/immunization_visit/inputs/contact/sex:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_meningococcal:label">
            <value>Meningococcal</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_typhoid_2:label">
            <value>Received Typhoid 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/pneumococcal:label">
            <value>Pneumococcal Pneumonia</value>
          </text>
          <text id="/immunization_visit/group_review/r_penta_2:label">
            <value>Pentavalent 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_1:label">
            <value>Oral Polio 1</value>
          </text>
          <text id="/immunization_visit/chw_phone:label">
            <value>CHW Phone</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit_no:label">
            <value>Immunization visit not completed</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms/did_not_attend:label">
            <value>Hi <output value=" /immunization_visit/chw_name "/>, <output value=" /immunization_visit/patient_name "/> (<output value=" /immunization_visit/group_review/r_patient_id "/>) did not attend their immunizations visit. We will send you a message when they are due for their next visit. Thank you!</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_0:label">
            <value>Received Birth Polio</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN2:label">
            <value>Meningococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_2:label">
            <value>Received Cholera 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_typhoid_1:label">
            <value>Typhoid 1</value>
          </text>
          <text id="/immunization_visit/group_note:label">
            <value>Note to the CHW</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit_yes:label">
            <value>Immunization visit completed</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_2:label">
            <value>HPV 2</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/MMRV2:label">
            <value>MMRV 2</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited:label">
            <value>Would you like to add a personal note to the message?</value>
          </text>
          <text id="/immunization_visit/inputs:label">
            <value>Patient</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid:label">
            <value>Which dose of Typhoid did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/group_review/r_vaccines_given:label">
            <value>Vaccines Given</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc/yes:label">
            <value>Yes</value>
          </text>
          <text id="/immunization_visit/group_review/r_penta_1:label">
            <value>Pentavalent 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_2:label">
            <value>Pneumococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmr_2:label">
            <value>Received MMR 2</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_3:label">
            <value>Cholera 3</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr:label">
            <value>Which dose of MMR did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio:label">
            <value>Which dose of Polio did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms/default:label">
            <value>Nice work, <output value=" /immunization_visit/chw_name "/>! <output value=" /immunization_visit/patient_name "/> (<output value=" /immunization_visit/group_review/r_patient_id "/>) attended their immunizations visit at the health facility. Keep up the good work. Thank you!</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH2:label">
            <value>Cholera 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV0:label">
            <value>Birth Polio</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_typhoid_1:label">
            <value>Received Typhoid 1</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/TY1:label">
            <value>Typhoid 1</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/penta:label">
            <value>Pentavalent</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg/no:label">
            <value>No</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/flu:label">
            <value>Influenza</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hep_a_2:label">
            <value>Received Hepatitis A 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_3:label">
            <value>Oral Polio 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmrv_2:label">
            <value>MMRV 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_1:label">
            <value>Received Rotavirus 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_3:label">
            <value>Rotavirus 3</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a:label">
            <value>Which dose of Hepatitis A did <output value=" /immunization_visit/patient_name "/> receive?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_3:label">
            <value>Received Cholera 3</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg/yes:label">
            <value>Yes</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/patient_name:label">
            <value>Patient Name</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV1:label">
            <value>HPV 1</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/TY2:label">
            <value>Typhoid 2</value>
          </text>
          <text id="/immunization_visit/patient_id:label">
            <value>Patient ID</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/MMR1:label">
            <value>MMR 1</value>
          </text>
          <text id="/immunization_visit/group_polio:label">
            <value>Polio</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_1:label">
            <value>Received Meningococcal 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_1:label">
            <value>Meningococcal 1</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm/no:label">
            <value>No</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_0:label">
            <value>Birth Polio</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu:label">
            <value>Did <output value=" /immunization_visit/patient_name "/> receive the flu vaccine?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hpv_1:label">
            <value>Received HPV 1</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV1:label">
            <value>Oral Polio 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_2:label">
            <value>Received Polio 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_2:label">
            <value>Meningococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_3:label">
            <value>Received Polio 3</value>
          </text>
          <text id="/immunization_visit/chw_name:label">
            <value>CHW Name</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/group_bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/group_flu:label">
            <value>Influenza</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup:label">
            <value>Follow Up Message &lt;i class="fa fa-envelope"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/group_review/r_typhoid_2:label">
            <value>Typhoid 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_flu:label">
            <value>Flu</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_3:label">
            <value>Pneumococcal 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_summary:label">
            <value>Patient Information&lt;i class="fa fa-user"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/inputs/contact/date_of_birth:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_chw_info/chw_information:label">
            <value>The immunization visit for <output value=" /immunization_visit/patient_name "/> has not been recorded.</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a:label">
            <value>Did <output value=" /immunization_visit/patient_name "/> receive a Vitamin A vaccine?</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/none:label">
            <value>None</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV4:label">
            <value>Pneumococcal 4</value>
          </text>
          <text id="/immunization_visit/group_mmr:label">
            <value>MMR (Measles, Mumps, Rubella)</value>
          </text>
          <text id="/immunization_visit/group_typhoid:label">
            <value>Typhoid</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_1:label">
            <value>Received Pentavalent 1</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu/yes:label">
            <value>Yes</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT3:label">
            <value>Pentavalent 3</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv:jr:constraintMsg">
            <value>Cannot select none if another dose is selected.</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_1:label">
            <value>Received Cholera 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_3:label">
            <value>Received Pneumococcal 3</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu/no:label">
            <value>No</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever/no:label">
            <value>No</value>
          </text>
          <text id="/immunization_visit/inputs/contact/patient_id:label">
            <value></value>
          </text>
        </translation>
        <translation lang="id">
          <text id="/immunization_visit/vaccines_received/received_hpv_2:label">
            <value>Mendapatkan HPV 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/typhoid:label">
            <value>Typhoid</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm/yes:label">
            <value>Iya</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus:label">
            <value>Apa dosis Rotavirus melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN4:label">
            <value>Meningococcal 4</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/HA1:label">
            <value>Hepatitis A 1</value>
          </text>
          <text id="/immunization_visit/group_jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv:label">
            <value>Apa dosis MMRV melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_1:label">
            <value>Mendapatkan Polio 1</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV2:label">
            <value>Pneumococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmrv_1:label">
            <value>Mendapatkan MMRV 1</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH1:label">
            <value>Kolera 1</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever:label">
            <value>Apakah <output value=" /immunization_visit/patient_name "/> menerima vaksin Yellow Fever?</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:jr:constraintMsg">
            <value>Pesan anda tidak boleh lebih dari 5 pesan SMS. Persingkat pesan Anda untuk mengurangi biaya SMS.</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal:label">
            <value>Pneumococcal Pneumonia</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmrv_2:label">
            <value>Mendapatkan MMRV 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_3:label">
            <value>Mendapatkan Meningococcal 3</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc:label">
            <value>Apakah <output value=" /immunization_visit/patient_name "/> menerima vaksin Japanese Encephalitis?</value>
          </text>
          <text id="/immunization_visit/group_review/r_hep_a_2:label">
            <value>Hepatitis A 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_4:label">
            <value>Pneimococcal 4</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_3:label">
            <value>Mendapatkan Rotavirus 3</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/MMRV1:label">
            <value>MMRV 1</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:hint">
            <value>Pesan akan dikirim ke <output value=" /immunization_visit/chw_name "/> (<output value=" /immunization_visit/chw_phone "/>). Pesan dibatasi panjang untuk menghindari biaya SMS yang tinggi.</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_review/r_bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines:label">
            <value>Pilih Jenis Vaksin</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a/yes:label">
            <value>Iya</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmr_2:label">
            <value>MMR 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines:hint">
            <value>Pilih semua yang berlaku</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup_note2:label">
            <value><output value=" /immunization_visit/chw_sms "/></value>
          </text>
          <text id="/immunization_visit/inputs/contact/_id:label">
            <value>Apa nama pasien?</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited/yes:label">
            <value>Iya</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_vitamin_a:label">
            <value>Mendapatkan Vitamin A</value>
          </text>
          <text id="/immunization_visit/group_review/r_hep_a_1:label">
            <value>Hepatitis A 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup_note1:label">
            <value>**Berikut ini akan dikirim sebagai SMS ke <output value=" /immunization_visit/chw_name "/> <output value=" /immunization_visit/chw_phone "/>**</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/hep_a:label">
            <value>Hepatitis A</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a/no:label">
            <value>Tidak</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_1:label">
            <value>Pneimococcal 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmr_1:label">
            <value>Mendapatkan MMR 1</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV1:label">
            <value>Rotavirus 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_4:label">
            <value>Mendapatkan Meningococcal 4</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc/no:label">
            <value>Tidak</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines:label">
            <value>Vaksin apakah yang anda ingin laporkan hari ini?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_jap_enc:label">
            <value>Mendapatkan Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT1:label">
            <value>Pentavalent 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_1:label">
            <value>Rotavirus 1</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms_note:label">
            <value>**Pesan berikut dapat dikirim sebagai adalah atau dimodifikasi untuk menambahkan catatan pribadi**
 <output value=" /immunization_visit/group_note/default_chw_sms_text "/></value>
          </text>
          <text id="/immunization_visit/group_review/r_penta_3:label">
            <value>Pentavalent 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_2:label">
            <value>Rotavirus 2</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV1:label">
            <value>Pneumococcal 1</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/group_review/r_pregnancy_details:label">
            <value>&quot;**<output value=" /immunization_visit/patient_name "/>**
ID: <output value=" /immunization_visit/group_review/r_patient_id "/>&quot;</value>
          </text>
          <text id="/immunization_visit/inputs/contact/parent/contact/phone:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/mmrv:label">
            <value>MMRV (Measles, Mumps, Rubella, Varicella)</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/patient_phone:label">
            <value>Nomor Telepon Pasien</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hpv_3:label">
            <value>Mendapatkan HPV 3</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_bcg:label">
            <value>Mendapatkan BCG</value>
          </text>
          <text id="/immunization_visit/group_hep_a:label">
            <value>Hepatitis A</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera:label">
            <value>Apa dosis Kolera melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent:label">
            <value>Apa dosis Pentavalent melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN3:label">
            <value>Meningococcal 3</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg:label">
            <value>Apakah <output value=" /immunization_visit/patient_name "/> menerima vaksin BCG?</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV3:label">
            <value>Rotavirus 3</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_2:label">
            <value>Mendapatkan Rotavirus 2</value>
          </text>
          <text id="/immunization_visit/group_review/submit:label">
            <value>**Pastikan anda sudah mengirim untuk menyelesaikan tindakan ini.**</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal:label">
            <value>Apa dosis Pneumococcal Pneumonia melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/inputs/contact/name:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/rotavirus:label">
            <value>Rotavirus</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH3:label">
            <value>Kolera 3</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/polio:label">
            <value>Polio</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmrv_1:label">
            <value>MMRV 1</value>
          </text>
          <text id="/immunization_visit/group_cholera:label">
            <value>Kolera</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a/HA2:label">
            <value>Hepatitis A 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/mmr:label">
            <value>MMR (Measles, Mumps, Rubella)</value>
          </text>
          <text id="/immunization_visit/inputs/contact/phone:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_1:label">
            <value>Kolera 1</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV3:label">
            <value>HPV 3</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited/no:label">
            <value>Tidak</value>
          </text>
          <text id="/immunization_visit/group_review/r_yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/patient_uuid:label">
            <value>Pasien UUID</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV3:label">
            <value>Pneumococcal 3</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT2:label">
            <value>Pentavalent 2</value>
          </text>
          <text id="/immunization_visit/group_hpv:label">
            <value>HPV (Human Papillomavirus)</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV2:label">
            <value>HPV 2</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm:label">
            <value>Apakah <output value=" /immunization_visit/patient_name "/> datang untuk diimunisasi?</value>
          </text>
          <text id="/immunization_visit/inputs/contact/_id:hint">
            <value>Pilih orang dari daftar</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit:label">
            <value>Mengunjungi informasi&lt;i class="fa fa-plus-square"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_2:label">
            <value>Mendapatkan Pentavalent 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_3:label">
            <value>HPV 3</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal:label">
            <value>Apa dosis Meningococcal melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv:label">
            <value>Apa dosis HPV melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN1:label">
            <value>Meningococcal 1</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever/yes:label">
            <value>Iya</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_review/r_jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_pentavalent:label">
            <value>Pentavalent</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_flu:label">
            <value>Mendapatkan Flu</value>
          </text>
          <text id="/immunization_visit/group_chw_info/call_button:label">
            <value>**Mohon menghubungi <output value=" /immunization_visit/chw_name "/> untuk mengetahui apakah <output value=" /immunization_visit/patient_name "/> data untuk diimunisasi.** Sebut: <output value=" /immunization_visit/chw_phone "/></value></text>
          <text id="/immunization_visit/group_review/r_mmr_1:label">
            <value>MMR 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_1:label">
            <value>HPV 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_4:label">
            <value>Meningococcal 4</value>
          </text>
          <text id="/immunization_visit/patient_age_in_years:label">
            <value>Umur</value>
          </text>
          <text id="/immunization_visit/group_chw_info:label">
            <value>Laporan Kunjungan Hilang</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_3:label">
            <value>Meningococcal 3</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_yellow_fever:label">
            <value>Mendapatkan Yellow Fever</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_2:label">
            <value>Oral Polio 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV3:label">
            <value>Oral Polio 3</value>
          </text>
          <text id="/immunization_visit/vaccines_received:label">
            <value>Vaksin didapat</value>
          </text>
          <text id="/immunization_visit/group_rotavirus/g_rotavirus/RV2:label">
            <value>Rotavirus 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV2:label">
            <value>Oral Polio 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hep_a_1:label">
            <value>Mendapatkan Hepatitis A 1</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/inputs/contact/parent/contact/name:label">
            <value></value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_1:label">
            <value>Mendapatkan Pneumococcal 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_2:label">
            <value>Kolera 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_2:label">
            <value>Mendapatkan Meningococcal 2</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/meningococcal:label">
            <value>Meningococcal</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/hpv:label">
            <value>HPV (Human Papillomavirus)</value>
          </text>
          <text id="/immunization_visit/group_rotavirus:label">
            <value>Rotavirus</value>
          </text>
          <text id="/immunization_visit/chw_sms:label">
            <value>Catatan Kader</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_4:label">
            <value>Mendapatkan Pneumococcal 4</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms:label">
            <value>-</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/cholera:label">
            <value>Kolera</value>
          </text>
          <text id="/immunization_visit/group_mmrv:label">
            <value>MMR (Measles, Mumps, Rubella, Varicella)</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_3:label">
            <value>Mendapatkan Pentavalent 3</value>
          </text>
          <text id="/immunization_visit/group_note/g_chw_sms:label">
            <value>Pesan berikut dapat dikirim sebagai adalah atau dimodifikasi untuk menambahkan catatan pribadi</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_2:label">
            <value>Mendapatkan Pneumococcal 2</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/MMR2:label">
            <value>MMR 2</value>
          </text>
          <text id="/immunization_visit/inputs/contact/sex:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_meningococcal:label">
            <value>Meningococcal</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_typhoid_2:label">
            <value>Mendapatkan Typhoid 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_vitamin_a:label">
            <value>Vitamin A</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/pneumococcal:label">
            <value>Pneumococcal Pneumonia</value>
          </text>
          <text id="/immunization_visit/group_review/r_penta_2:label">
            <value>Pentavalent 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_1:label">
            <value>Oral Polio 1</value>
          </text>
          <text id="/immunization_visit/chw_phone:label">
            <value>Nomor Telepon Kader</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit_no:label">
            <value>Kunjungan imunisasi tidak lengkap</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms/did_not_attend:label">
            <value>-</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_0:label">
            <value>Mendapatkan Polio Lahir</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal/MN2:label">
            <value>Meningococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_2:label">
            <value>Mendapatkan Kolera 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_typhoid_1:label">
            <value>Typhoid 1</value>
          </text>
          <text id="/immunization_visit/group_note:label">
            <value>Catatan ke kader</value>
          </text>
          <text id="/immunization_visit/group_review/r_visit_yes:label">
            <value>Kunjungan imunisasi lengkap</value>
          </text>
          <text id="/immunization_visit/group_review/r_hpv_2:label">
            <value>HPV 2</value>
          </text>
          <text id="/immunization_visit/group_mmrv/g_mmrv/MMRV2:label">
            <value>MMRV 2</value>
          </text>
          <text id="/immunization_visit/group_note/is_sms_edited:label">
            <value>Apakah anda ingin mengedit atau menambahkan info untuk pesan?</value>
          </text>
          <text id="/immunization_visit/inputs:label">
            <value>Pasien</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid:label">
            <value>Apa dosis Typhoid melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/group_review/r_vaccines_given:label">
            <value>Vaksin yang diberikan</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/group_jap_enc/g_jap_enc/yes:label">
            <value>Iya</value>
          </text>
          <text id="/immunization_visit/group_review/r_penta_1:label">
            <value>Pentavalent 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_2:label">
            <value>Pneimococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_mmr_2:label">
            <value>Mendapatkan MMR 2</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever:label">
            <value>Yellow Fever</value>
          </text>
          <text id="/immunization_visit/group_review/r_cholera_3:label">
            <value>Kolera 3</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr:label">
            <value>Apa dosis MMR melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio:label">
            <value>Apa dosis Polio melakukan <output value=" /immunization_visit/patient_name "/> yang diterima?</value>
          </text>
          <text id="/immunization_visit/group_note/default_chw_sms/default:label">
            <value>-</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/CH2:label">
            <value>Kolera 2</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV0:label">
            <value>Polio saat lahir</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_typhoid_1:label">
            <value>Mendapatkan Typhoid 1</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/TY1:label">
            <value>Typhoid 1</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/penta:label">
            <value>Pentavalent</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg/no:label">
            <value>Tidak</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/flu:label">
            <value>Influenza</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hep_a_2:label">
            <value>Mendapatkan Hepatitis A 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_3:label">
            <value>Oral Polio 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_mmrv_2:label">
            <value>MMRV 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_rotavirus_1:label">
            <value>Mendapatkan Rotavirus 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_rotavirus_3:label">
            <value>Rotavirus 3</value>
          </text>
          <text id="/immunization_visit/group_hep_a/g_hep_a:label">
            <value>Yang dosis Hepatitis A <output value=" /immunization_visit/patient_name "/> terima?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_3:label">
            <value>Mendapatkan Kolera 3</value>
          </text>
          <text id="/immunization_visit/group_bcg/g_bcg/yes:label">
            <value>Iya</value>
          </text>
          <text id="/immunization_visit/group_meningococcal/g_meningococcal:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/patient_name:label">
            <value>Nama Pasien</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv/HPV1:label">
            <value>HPV 1</value>
          </text>
          <text id="/immunization_visit/group_typhoid/g_typhoid/TY2:label">
            <value>Typhoid 2</value>
          </text>
          <text id="/immunization_visit/patient_id:label">
            <value>Pasien ID</value>
          </text>
          <text id="/immunization_visit/group_cholera/g_cholera/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr/MMR1:label">
            <value>MMR 1</value>
          </text>
          <text id="/immunization_visit/group_polio:label">
            <value>Polio</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_meningococcal_1:label">
            <value>Mendapatkan Meningococcal 1</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_1:label">
            <value>Meningococcal 1</value>
          </text>
          <text id="/immunization_visit/group_chw_info/attended_imm/no:label">
            <value>Tidak</value>
          </text>
          <text id="/immunization_visit/group_review/r_opv_0:label">
            <value>Polio saat lahir</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu:label">
            <value>Apakah <output value=" /immunization_visit/patient_name "/> menerima vaksin Influenza?</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_hpv_1:label">
            <value>Mendapatkan HPV 1</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/OPV1:label">
            <value>Oral Polio 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_2:label">
            <value>Mendapatkan Polio 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_meningococcal_2:label">
            <value>Meningococcal 2</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_polio_3:label">
            <value>Mendapatkan Polio 3</value>
          </text>
          <text id="/immunization_visit/chw_name:label">
            <value>Nama Kader</value>
          </text>
          <text id="/immunization_visit/group_mmr/g_mmr:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/group_bcg:label">
            <value>BCG</value>
          </text>
          <text id="/immunization_visit/group_flu:label">
            <value>Influenza</value>
          </text>
          <text id="/immunization_visit/group_review/r_followup:label">
            <value>Follow Up Pesan &lt;i class="fa fa-envelope"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/group_review/r_typhoid_2:label">
            <value>Typhoid 2</value>
          </text>
          <text id="/immunization_visit/group_review/r_flu:label">
            <value>Flu</value>
          </text>
          <text id="/immunization_visit/group_review/r_pneumococcal_3:label">
            <value>Pneimococcal 3</value>
          </text>
          <text id="/immunization_visit/group_review/r_summary:label">
            <value>Informasi pasien &lt;i class="fa fa-user"&gt;&lt;/i&gt;</value>
          </text>
          <text id="/immunization_visit/inputs/contact/date_of_birth:label">
            <value></value>
          </text>
          <text id="/immunization_visit/group_chw_info/chw_information:label">
            <value>Kunjungan imunisasi untuk <output value=" /immunization_visit/patient_name "/> belum terdata.</value>
          </text>
          <text id="/immunization_visit/group_select_vaccines/g_vaccines/jap_enc:label">
            <value>Japanese Encephalitis</value>
          </text>
          <text id="/immunization_visit/group_vitamin_a/g_vitamin_a:label">
            <value>Apakah <output value=" /immunization_visit/patient_name "/> menerima vaksin Vitamin A?</value>
          </text>
          <text id="/immunization_visit/group_polio/g_polio/none:label">
            <value>Tak satupun</value>
          </text>
          <text id="/immunization_visit/group_pneumococcal/g_pneumococcal/PCV4:label">
            <value>Pneumococcal 4</value>
          </text>
          <text id="/immunization_visit/group_mmr:label">
            <value>MMR (Measles, Mumps, Rubella)</value>
          </text>
          <text id="/immunization_visit/group_typhoid:label">
            <value>Typhoid</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_penta_1:label">
            <value>Mendapatkan Pentavalent 1</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu/yes:label">
            <value>Iya</value>
          </text>
          <text id="/immunization_visit/group_pentavalent/g_pentavalent/DT3:label">
            <value>Pentavalent 3</value>
          </text>
          <text id="/immunization_visit/group_hpv/g_hpv:jr:constraintMsg">
            <value>Tidak dapat memilih 'tak satupun' jika dosis lain dipilih.</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_cholera_1:label">
            <value>Mendapatkan Kolera 1</value>
          </text>
          <text id="/immunization_visit/vaccines_received/received_pneumococcal_3:label">
            <value>Mendapatkan Pneumococcal 3</value>
          </text>
          <text id="/immunization_visit/group_flu/g_flu/no:label">
            <value>Tidak</value>
          </text>
          <text id="/immunization_visit/group_yellow_fever/g_yellow_fever/no:label">
            <value>Tidak</value>
          </text>
          <text id="/immunization_visit/inputs/contact/patient_id:label">
            <value></value>
          </text>
        </translation>
      </itext>
      <instance>
        <immunization_visit delimiter="#" id="immunization_visit" prefix="J1!immunization_visit!" version="2018-03-06_06-55">
          <inputs tag="hidden">
            <meta tag="hidden">
              <location>
                <lat/>
                <long/>
                <error/>
                <message/>
              </location>
            </meta>
            <source>user</source>
            <source_id/>
            <contact>
              <_id/>
              <patient_id/>
              <name/>
              <date_of_birth/>
              <sex/>
              <phone/>
              <parent>
                <contact>
                  <phone/>
                  <name/>
                </contact>
              </parent>
            </contact>
          </inputs>
          <patient_age_in_years tag="hidden"/>
          <patient_phone/>
          <patient_uuid tag="hidden"/>
          <patient_id/>
          <patient_name/>
          <chw_name/>
          <chw_phone/>
          <chw_sms/>
          <visit_confirmed/>
          <vaccines_received>
            <received_bcg/>
            <received_cholera_1/>
            <received_cholera_2/>
            <received_cholera_3/>
            <received_hep_a_1/>
            <received_hep_a_2/>
            <received_hpv_1/>
            <received_hpv_2/>
            <received_hpv_3/>
            <received_flu/>
            <received_jap_enc/>
            <received_meningococcal_1/>
            <received_meningococcal_2/>
            <received_meningococcal_3/>
            <received_meningococcal_4/>
            <received_mmr_1/>
            <received_mmr_2/>
            <received_mmrv_1/>
            <received_mmrv_2/>
            <received_polio_0/>
            <received_polio_1/>
            <received_polio_2/>
            <received_polio_3/>
            <received_penta_1/>
            <received_penta_2/>
            <received_penta_3/>
            <received_pneumococcal_1/>
            <received_pneumococcal_2/>
            <received_pneumococcal_3/>
            <received_pneumococcal_4/>
            <received_rotavirus_1/>
            <received_rotavirus_2/>
            <received_rotavirus_3/>
            <received_typhoid_1/>
            <received_typhoid_2/>
            <received_vitamin_a/>
            <received_yellow_fever/>
          </vaccines_received>
          <group_chw_info tag="hidden">
            <chw_information/>
            <call_button/>
            <attended_imm>yes</attended_imm>
          </group_chw_info>
          <group_select_vaccines tag="hidden">
            <g_vaccines/>
          </group_select_vaccines>
          <group_bcg tag="hidden">
            <g_bcg/>
          </group_bcg>
          <group_cholera tag="hidden">
            <g_cholera/>
          </group_cholera>
          <group_hep_a tag="hidden">
            <g_hep_a/>
          </group_hep_a>
          <group_hpv tag="hidden">
            <g_hpv/>
          </group_hpv>
          <group_flu tag="hidden">
            <g_flu/>
          </group_flu>
          <group_jap_enc tag="hidden">
            <g_jap_enc/>
          </group_jap_enc>
          <group_meningococcal tag="hidden">
            <g_meningococcal/>
          </group_meningococcal>
          <group_mmr tag="hidden">
            <g_mmr/>
          </group_mmr>
          <group_mmrv tag="hidden">
            <g_mmrv/>
          </group_mmrv>
          <group_polio tag="hidden">
            <g_polio/>
          </group_polio>
          <group_pentavalent tag="hidden">
            <g_pentavalent/>
          </group_pentavalent>
          <group_pneumococcal tag="hidden">
            <g_pneumococcal/>
          </group_pneumococcal>
          <group_rotavirus tag="hidden">
            <g_rotavirus/>
          </group_rotavirus>
          <group_typhoid tag="hidden">
            <g_typhoid/>
          </group_typhoid>
          <group_vitamin_a tag="hidden">
            <g_vitamin_a/>
          </group_vitamin_a>
          <group_yellow_fever tag="hidden">
            <g_yellow_fever/>
          </group_yellow_fever>
          <group_note tag="hidden">
            <default_chw_sms/>
            <default_chw_sms_text/>
            <default_chw_sms_note/>
            <is_sms_edited>yes</is_sms_edited>
            <g_chw_sms/>
          </group_note>
          <group_review tag="hidden">
            <submit/>
            <r_summary/>
            <r_patient_id/>
            <r_pregnancy_details/>
            <r_visit/>
            <r_visit_yes/>
            <r_visit_no/>
            <r_vaccines_given/>
            <r_bcg/>
            <r_cholera_1/>
            <r_cholera_2/>
            <r_cholera_3/>
            <r_hep_a_1/>
            <r_hep_a_2/>
            <r_hpv_1/>
            <r_hpv_2/>
            <r_hpv_3/>
            <r_flu/>
            <r_jap_enc/>
            <r_meningococcal_1/>
            <r_meningococcal_2/>
            <r_meningococcal_3/>
            <r_meningococcal_4/>
            <r_mmr_1/>
            <r_mmr_2/>
            <r_mmrv_1/>
            <r_mmrv_2/>
            <r_opv_0/>
            <r_opv_1/>
            <r_opv_2/>
            <r_opv_3/>
            <r_penta_1/>
            <r_penta_2/>
            <r_penta_3/>
            <r_pneumococcal_1/>
            <r_pneumococcal_2/>
            <r_pneumococcal_3/>
            <r_pneumococcal_4/>
            <r_rotavirus_1/>
            <r_rotavirus_2/>
            <r_rotavirus_3/>
            <r_typhoid_1/>
            <r_typhoid_2/>
            <r_vitamin_a/>
            <r_yellow_fever/>
            <r_followup/>
            <r_followup_note1/>
            <r_followup_note2/>
          </group_review>
          <meta tag="hidden">
            <instanceID/>
          </meta>
        </immunization_visit>
      </instance>
      <instance id="contact-summary"/>
      <bind nodeset="/immunization_visit/inputs" relevant="./source = 'user'"/>
      <bind nodeset="/immunization_visit/inputs/source" type="string"/>
      <bind nodeset="/immunization_visit/inputs/source_id" type="string"/>
      <bind nodeset="/immunization_visit/inputs/contact/_id" type="db:person"/>
      <bind nodeset="/immunization_visit/inputs/contact/patient_id" type="string"/>
      <bind nodeset="/immunization_visit/inputs/contact/name" type="string"/>
      <bind nodeset="/immunization_visit/inputs/contact/date_of_birth" type="string"/>
      <bind nodeset="/immunization_visit/inputs/contact/sex" type="string"/>
      <bind nodeset="/immunization_visit/inputs/contact/phone" type="string"/>
      <bind nodeset="/immunization_visit/inputs/contact/parent/contact/phone" type="string"/>
      <bind nodeset="/immunization_visit/inputs/contact/parent/contact/name" type="string"/>
      <bind calculate="if (  /immunization_visit/inputs/contact/date_of_birth ='', '', floor( difference-in-months(  /immunization_visit/inputs/contact/date_of_birth , today() ) div 12 ) )" nodeset="/immunization_visit/patient_age_in_years" type="string"/>
      <bind calculate="../inputs/contact/phone" nodeset="/immunization_visit/patient_phone" type="string"/>
      <bind calculate="../inputs/contact/_id" nodeset="/immunization_visit/patient_uuid" type="string"/>
      <bind calculate="../inputs/contact/patient_id" nodeset="/immunization_visit/patient_id" type="string"/>
      <bind calculate="../inputs/contact/name" nodeset="/immunization_visit/patient_name" type="string"/>
      <bind calculate="../inputs/contact/parent/contact/name" nodeset="/immunization_visit/chw_name" type="string"/>
      <bind calculate="../inputs/contact/parent/contact/phone" nodeset="/immunization_visit/chw_phone" type="string"/>
      <bind calculate="if( /immunization_visit/group_note/g_chw_sms  != '', concat( /immunization_visit/group_note/default_chw_sms_text ,concat('
', /immunization_visit/group_note/g_chw_sms )),  /immunization_visit/group_note/default_chw_sms_text )" nodeset="/immunization_visit/chw_sms" type="string"/>
      <bind calculate=" /immunization_visit/group_chw_info/attended_imm " nodeset="/immunization_visit/visit_confirmed" type="string"/>
      <bind calculate="if( /immunization_visit/group_bcg/g_bcg  = 'yes','yes','no')" nodeset="/immunization_visit/vaccines_received/received_bcg" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_cholera/g_cholera ,'CH1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_cholera_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_cholera/g_cholera ,'CH2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_cholera_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_cholera/g_cholera ,'CH3'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_cholera_3" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_hep_a/g_hep_a ,'HA1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_hep_a_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_hep_a/g_hep_a ,'HA2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_hep_a_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_hpv/g_hpv ,'HPV1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_hpv_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_hpv/g_hpv ,'HPV2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_hpv_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_hpv/g_hpv ,'HPV3'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_hpv_3" type="string"/>
      <bind calculate="if( /immunization_visit/group_flu/g_flu  = 'yes','yes','no')" nodeset="/immunization_visit/vaccines_received/received_flu" type="string"/>
      <bind calculate="if( /immunization_visit/group_jap_enc/g_jap_enc  = 'yes','yes','no')" nodeset="/immunization_visit/vaccines_received/received_jap_enc" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_meningococcal_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_meningococcal_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN3'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_meningococcal_3" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN4'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_meningococcal_4" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_mmr/g_mmr ,'MMR1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_mmr_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_mmr/g_mmr ,'MMR2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_mmr_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_mmrv/g_mmrv ,'MMRV1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_mmrv_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_mmrv/g_mmrv ,'MMRV2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_mmrv_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_polio/g_polio ,'OPV0'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_polio_0" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_polio/g_polio ,'OPV1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_polio_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_polio/g_polio ,'OPV2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_polio_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_polio/g_polio ,'OPV3'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_polio_3" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_penta_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_penta_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT3'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_penta_3" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_pneumococcal_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_pneumococcal_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV3'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_pneumococcal_3" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV4'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_pneumococcal_4" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_rotavirus_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_rotavirus_2" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV3'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_rotavirus_3" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_typhoid/g_typhoid ,'TY1'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_typhoid_1" type="string"/>
      <bind calculate="if(selected( /immunization_visit/group_typhoid/g_typhoid ,'TY2'),'yes','no')" nodeset="/immunization_visit/vaccines_received/received_typhoid_2" type="string"/>
      <bind calculate="if( /immunization_visit/group_vitamin_a/g_vitamin_a  = 'yes','yes','no')" nodeset="/immunization_visit/vaccines_received/received_vitamin_a" type="string"/>
      <bind calculate="if( /immunization_visit/group_yellow_fever/g_yellow_fever  = 'yes','yes','no')" nodeset="/immunization_visit/vaccines_received/received_yellow_fever" type="string"/>
      <bind nodeset="/immunization_visit/group_chw_info" relevant=" /immunization_visit/inputs/source  = 'task'"/>
      <bind nodeset="/immunization_visit/group_chw_info/chw_information" readonly="true()" type="string"/>
      <bind nodeset="/immunization_visit/group_chw_info/call_button" readonly="true()" type="string"/>
      <bind nodeset="/immunization_visit/group_chw_info/attended_imm" required="true()" type="select1"/>
      <bind nodeset="/immunization_visit/group_select_vaccines" relevant=" /immunization_visit/group_chw_info/attended_imm  = 'yes'"/>
      <bind nodeset="/immunization_visit/group_select_vaccines/g_vaccines" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_bcg" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'bcg')"/>
      <bind nodeset="/immunization_visit/group_bcg/g_bcg" required="true()" type="select1"/>
      <bind nodeset="/immunization_visit/group_cholera" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'cholera')"/>
      <bind constraint="(not(selected( /immunization_visit/group_cholera/g_cholera ,'none')) and (selected( /immunization_visit/group_cholera/g_cholera ,'CH1') or selected( /immunization_visit/group_cholera/g_cholera ,'CH2') or selected( /immunization_visit/group_cholera/g_cholera ,'CH3'))) or (selected( /immunization_visit/group_cholera/g_cholera ,'none') and not(selected( /immunization_visit/group_cholera/g_cholera ,'CH1') or selected( /immunization_visit/group_cholera/g_cholera ,'CH2') or selected( /immunization_visit/group_cholera/g_cholera ,'CH3')))" jr:constraintMsg="jr:itext('/immunization_visit/group_cholera/g_cholera:jr:constraintMsg')" nodeset="/immunization_visit/group_cholera/g_cholera" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_hep_a" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'hep_a')"/>
      <bind constraint="(not(selected( /immunization_visit/group_hep_a/g_hep_a ,'none')) and (selected( /immunization_visit/group_hep_a/g_hep_a ,'HA1') or selected( /immunization_visit/group_hep_a/g_hep_a ,'HA2'))) or (selected( /immunization_visit/group_hep_a/g_hep_a ,'none') and not(selected( /immunization_visit/group_hep_a/g_hep_a ,'HA1') or selected( /immunization_visit/group_hep_a/g_hep_a ,'HA2')))" jr:constraintMsg="jr:itext('/immunization_visit/group_hep_a/g_hep_a:jr:constraintMsg')" nodeset="/immunization_visit/group_hep_a/g_hep_a" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_hpv" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'hpv')"/>
      <bind constraint="(not(selected( /immunization_visit/group_hpv/g_hpv ,'none')) and (selected( /immunization_visit/group_hpv/g_hpv ,'HPV1') or selected( /immunization_visit/group_hpv/g_hpv ,'HPV2') or selected( /immunization_visit/group_hpv/g_hpv ,'HPV3'))) or selected( /immunization_visit/group_hpv/g_hpv ,'none') and not(selected( /immunization_visit/group_hpv/g_hpv ,'HPV1') or selected( /immunization_visit/group_hpv/g_hpv ,'HPV2') or selected( /immunization_visit/group_hpv/g_hpv ,'HPV3'))" jr:constraintMsg="jr:itext('/immunization_visit/group_hpv/g_hpv:jr:constraintMsg')" nodeset="/immunization_visit/group_hpv/g_hpv" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_flu" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'flu')"/>
      <bind nodeset="/immunization_visit/group_flu/g_flu" required="true()" type="select1"/>
      <bind nodeset="/immunization_visit/group_jap_enc" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'jap_enc')"/>
      <bind nodeset="/immunization_visit/group_jap_enc/g_jap_enc" required="true()" type="select1"/>
      <bind nodeset="/immunization_visit/group_meningococcal" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'meningococcal')"/>
      <bind constraint="(not(selected( /immunization_visit/group_meningococcal/g_meningococcal ,'none')) and (selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN1') or selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN2') or selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN3') or selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN4'))) or selected( /immunization_visit/group_meningococcal/g_meningococcal ,'none') and not(selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN1') or selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN2') or selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN3') or selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN4'))" jr:constraintMsg="jr:itext('/immunization_visit/group_meningococcal/g_meningococcal:jr:constraintMsg')" nodeset="/immunization_visit/group_meningococcal/g_meningococcal" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_mmr" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'mmr')"/>
      <bind constraint="(not(selected( /immunization_visit/group_mmr/g_mmr ,'none')) and (selected( /immunization_visit/group_mmr/g_mmr ,'MMR1') or selected( /immunization_visit/group_mmr/g_mmr ,'MMR2'))) or selected( /immunization_visit/group_mmr/g_mmr ,'none') and not(selected( /immunization_visit/group_mmr/g_mmr ,'MMR1') or selected( /immunization_visit/group_mmr/g_mmr ,'MMR2'))" jr:constraintMsg="jr:itext('/immunization_visit/group_mmr/g_mmr:jr:constraintMsg')" nodeset="/immunization_visit/group_mmr/g_mmr" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_mmrv" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'mmrv')"/>
      <bind constraint="(not(selected( /immunization_visit/group_mmrv/g_mmrv ,'none')) and (selected( /immunization_visit/group_mmrv/g_mmrv ,'MMRV1') or selected( /immunization_visit/group_mmrv/g_mmrv ,'MMRV2'))) or selected( /immunization_visit/group_mmrv/g_mmrv ,'none') and not(selected( /immunization_visit/group_mmrv/g_mmrv ,'MMRV1') or selected( /immunization_visit/group_mmrv/g_mmrv ,'MMRV2'))" jr:constraintMsg="jr:itext('/immunization_visit/group_mmrv/g_mmrv:jr:constraintMsg')" nodeset="/immunization_visit/group_mmrv/g_mmrv" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_polio" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'polio')"/>
      <bind constraint="(not(selected( /immunization_visit/group_polio/g_polio ,'none')) and (selected( /immunization_visit/group_polio/g_polio ,'OPV0') or selected( /immunization_visit/group_polio/g_polio ,'OPV1') or selected( /immunization_visit/group_polio/g_polio ,'OPV2') or selected( /immunization_visit/group_polio/g_polio ,'OPV3'))) or selected( /immunization_visit/group_polio/g_polio ,'none') and not(selected( /immunization_visit/group_polio/g_polio ,'OPV0') or selected( /immunization_visit/group_polio/g_polio ,'OPV1') or selected( /immunization_visit/group_polio/g_polio ,'OPV2') or selected( /immunization_visit/group_polio/g_polio ,'OPV3'))" jr:constraintMsg="jr:itext('/immunization_visit/group_polio/g_polio:jr:constraintMsg')" nodeset="/immunization_visit/group_polio/g_polio" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_pentavalent" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'penta')"/>
      <bind constraint="(not(selected( /immunization_visit/group_pentavalent/g_pentavalent ,'none')) and (selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT1') or selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT2') or selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT3'))) or selected( /immunization_visit/group_pentavalent/g_pentavalent ,'none') and not(selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT1') or selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT2') or selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT3'))" jr:constraintMsg="jr:itext('/immunization_visit/group_pentavalent/g_pentavalent:jr:constraintMsg')" nodeset="/immunization_visit/group_pentavalent/g_pentavalent" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_pneumococcal" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'pneumococcal')"/>
      <bind constraint="(not(selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'none')) and (selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV1') or selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV2') or selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV3') or selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV4'))) or selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'none') and not(selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV1') or selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV2') or selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV3') or selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'PCV4'))" jr:constraintMsg="jr:itext('/immunization_visit/group_pneumococcal/g_pneumococcal:jr:constraintMsg')" nodeset="/immunization_visit/group_pneumococcal/g_pneumococcal" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_rotavirus" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'rotavirus')"/>
      <bind constraint="(not(selected( /immunization_visit/group_rotavirus/g_rotavirus ,'none')) and (selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV1') or selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV2') or selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV3'))) or selected( /immunization_visit/group_rotavirus/g_rotavirus ,'none') and not(selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV1') or selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV2') or selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV3'))" jr:constraintMsg="jr:itext('/immunization_visit/group_rotavirus/g_rotavirus:jr:constraintMsg')" nodeset="/immunization_visit/group_rotavirus/g_rotavirus" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_typhoid" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'typhoid')"/>
      <bind constraint="(not(selected( /immunization_visit/group_typhoid/g_typhoid ,'none')) and (selected( /immunization_visit/group_typhoid/g_typhoid ,'TY1') or selected( /immunization_visit/group_typhoid/g_typhoid ,'TY2'))) or selected( /immunization_visit/group_typhoid/g_typhoid ,'none') and not(selected( /immunization_visit/group_typhoid/g_typhoid ,'TY1') or selected( /immunization_visit/group_typhoid/g_typhoid ,'TY2'))" jr:constraintMsg="jr:itext('/immunization_visit/group_typhoid/g_typhoid:jr:constraintMsg')" nodeset="/immunization_visit/group_typhoid/g_typhoid" required="true()" type="select"/>
      <bind nodeset="/immunization_visit/group_vitamin_a" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'vitamin_a')"/>
      <bind nodeset="/immunization_visit/group_vitamin_a/g_vitamin_a" required="true()" type="select1"/>
      <bind nodeset="/immunization_visit/group_yellow_fever" relevant="selected( /immunization_visit/group_select_vaccines/g_vaccines ,'yellow_fever')"/>
      <bind nodeset="/immunization_visit/group_yellow_fever/g_yellow_fever" required="true()" type="select1"/>
      <bind calculate="if( /immunization_visit/group_chw_info/attended_imm  = 'yes', 'default', 'did_not_attend' )" nodeset="/immunization_visit/group_note/default_chw_sms" type="select1"/>
      <bind calculate="jr:choice-name( /immunization_visit/group_note/default_chw_sms ,' /immunization_visit/group_note/default_chw_sms ')" nodeset="/immunization_visit/group_note/default_chw_sms_text" type="string"/>
      <bind nodeset="/immunization_visit/group_note/default_chw_sms_note" readonly="true()" type="string"/>
      <bind nodeset="/immunization_visit/group_note/is_sms_edited" required="true()" type="select1"/>
      <bind constraint="string-length(.) &lt;= 715" jr:constraintMsg="jr:itext('/immunization_visit/group_note/g_chw_sms:jr:constraintMsg')" nodeset="/immunization_visit/group_note/g_chw_sms" type="string"/>
      <bind nodeset="/immunization_visit/group_review/submit" readonly="true()" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_summary" readonly="true()" type="string"/>
      <bind calculate="../../inputs/contact/patient_id" nodeset="/immunization_visit/group_review/r_patient_id" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_pregnancy_details" readonly="true()" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_visit" readonly="true()" relevant=" /immunization_visit/group_chw_info/attended_imm  != ''" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_visit_yes" readonly="true()" relevant="selected( /immunization_visit/group_chw_info/attended_imm , 'yes')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_visit_no" readonly="true()" relevant="selected( /immunization_visit/group_chw_info/attended_imm ,'no')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_vaccines_given" readonly="true()" relevant=" /immunization_visit/group_select_vaccines/g_vaccines  != ''" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_bcg" readonly="true()" relevant=" /immunization_visit/group_bcg/g_bcg  = 'yes'" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_cholera_1" readonly="true()" relevant="selected( /immunization_visit/group_cholera/g_cholera ,'CH1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_cholera_2" readonly="true()" relevant="selected( /immunization_visit/group_cholera/g_cholera ,'CH2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_cholera_3" readonly="true()" relevant="selected( /immunization_visit/group_cholera/g_cholera ,'CH3')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_hep_a_1" readonly="true()" relevant="selected( /immunization_visit/group_hep_a/g_hep_a ,'HA1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_hep_a_2" readonly="true()" relevant="selected( /immunization_visit/group_hep_a/g_hep_a ,'HA2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_hpv_1" readonly="true()" relevant="selected( /immunization_visit/group_hpv/g_hpv ,'HPV1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_hpv_2" readonly="true()" relevant="selected( /immunization_visit/group_hpv/g_hpv ,'HPV2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_hpv_3" readonly="true()" relevant="selected( /immunization_visit/group_hpv/g_hpv ,'HPV3')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_flu" readonly="true()" relevant=" /immunization_visit/group_flu/g_flu  = 'yes'" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_jap_enc" readonly="true()" relevant=" /immunization_visit/group_jap_enc/g_jap_enc  = 'yes'" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_meningococcal_1" readonly="true()" relevant="selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_meningococcal_2" readonly="true()" relevant="selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_meningococcal_3" readonly="true()" relevant="selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN3')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_meningococcal_4" readonly="true()" relevant="selected( /immunization_visit/group_meningococcal/g_meningococcal ,'MN4')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_mmr_1" readonly="true()" relevant="selected( /immunization_visit/group_mmr/g_mmr ,'MMR1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_mmr_2" readonly="true()" relevant="selected( /immunization_visit/group_mmr/g_mmr ,'MMR2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_mmrv_1" readonly="true()" relevant="selected( /immunization_visit/group_mmrv/g_mmrv ,'MMRV1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_mmrv_2" readonly="true()" relevant="selected( /immunization_visit/group_mmrv/g_mmrv ,'MMRV2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_opv_0" readonly="true()" relevant="selected( /immunization_visit/group_polio/g_polio ,'OPV0')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_opv_1" readonly="true()" relevant="selected( /immunization_visit/group_polio/g_polio ,'OPV1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_opv_2" readonly="true()" relevant="selected( /immunization_visit/group_polio/g_polio ,'OPV2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_opv_3" readonly="true()" relevant="selected( /immunization_visit/group_polio/g_polio ,'OPV3')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_penta_1" readonly="true()" relevant="selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_penta_2" readonly="true()" relevant="selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_penta_3" readonly="true()" relevant="selected( /immunization_visit/group_pentavalent/g_pentavalent ,'DT3')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_pneumococcal_1" readonly="true()" relevant="selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'MN1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_pneumococcal_2" readonly="true()" relevant="selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'MN2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_pneumococcal_3" readonly="true()" relevant="selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'MN3')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_pneumococcal_4" readonly="true()" relevant="selected( /immunization_visit/group_pneumococcal/g_pneumococcal ,'MN4')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_rotavirus_1" readonly="true()" relevant="selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_rotavirus_2" readonly="true()" relevant="selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_rotavirus_3" readonly="true()" relevant="selected( /immunization_visit/group_rotavirus/g_rotavirus ,'RV3')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_typhoid_1" readonly="true()" relevant="selected( /immunization_visit/group_typhoid/g_typhoid ,'TY1')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_typhoid_2" readonly="true()" relevant="selected( /immunization_visit/group_typhoid/g_typhoid ,'TY2')" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_vitamin_a" readonly="true()" relevant=" /immunization_visit/group_vitamin_a/g_vitamin_a  = 'yes'" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_yellow_fever" readonly="true()" relevant=" /immunization_visit/group_yellow_fever/g_yellow_fever  = 'yes'" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_followup" readonly="true()" relevant=" /immunization_visit/chw_sms  != ''" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_followup_note1" readonly="true()" relevant=" /immunization_visit/chw_sms  != ''" type="string"/>
      <bind nodeset="/immunization_visit/group_review/r_followup_note2" readonly="true()" relevant=" /immunization_visit/chw_sms  != ''" type="string"/>
      <bind calculate="concat('uuid:', uuid())" nodeset="/immunization_visit/meta/instanceID" readonly="true()" type="string"/>
    </model>
  </h:head>
  <h:body class="pages">
    <group appearance="field-list" ref="/immunization_visit/inputs">
      <label ref="jr:itext('/immunization_visit/inputs:label')"/>
      <group ref="/immunization_visit/inputs/contact">
        <input appearance="db-object" ref="/immunization_visit/inputs/contact/_id">
          <label ref="jr:itext('/immunization_visit/inputs/contact/_id:label')"/>
          <hint ref="jr:itext('/immunization_visit/inputs/contact/_id:hint')"/>
        </input>
        <input appearance="hidden" ref="/immunization_visit/inputs/contact/patient_id">
          <label ref="jr:itext('/immunization_visit/inputs/contact/patient_id:label')"/>
        </input>
        <input appearance="hidden" ref="/immunization_visit/inputs/contact/name">
          <label ref="jr:itext('/immunization_visit/inputs/contact/name:label')"/>
        </input>
        <input appearance="hidden" ref="/immunization_visit/inputs/contact/date_of_birth">
          <label ref="jr:itext('/immunization_visit/inputs/contact/date_of_birth:label')"/>
        </input>
        <input appearance="hidden" ref="/immunization_visit/inputs/contact/sex">
          <label ref="jr:itext('/immunization_visit/inputs/contact/sex:label')"/>
        </input>
        <input appearance="hidden" ref="/immunization_visit/inputs/contact/phone">
          <label ref="jr:itext('/immunization_visit/inputs/contact/phone:label')"/>
        </input>
        <group ref="/immunization_visit/inputs/contact/parent">
          <group ref="/immunization_visit/inputs/contact/parent/contact">
            <input appearance="hidden" ref="/immunization_visit/inputs/contact/parent/contact/phone">
              <label ref="jr:itext('/immunization_visit/inputs/contact/parent/contact/phone:label')"/>
            </input>
            <input appearance="hidden" ref="/immunization_visit/inputs/contact/parent/contact/name">
              <label ref="jr:itext('/immunization_visit/inputs/contact/parent/contact/name:label')"/>
            </input>
          </group>
        </group>
      </group>
    </group>
    <group ref="/immunization_visit/vaccines_received">
      <label ref="jr:itext('/immunization_visit/vaccines_received:label')"/>
    </group>
    <group appearance="field-list" ref="/immunization_visit/group_chw_info">
      <label ref="jr:itext('/immunization_visit/group_chw_info:label')"/>
      <input ref="/immunization_visit/group_chw_info/chw_information">
        <label ref="jr:itext('/immunization_visit/group_chw_info/chw_information:label')"/>
      </input>
      <input ref="/immunization_visit/group_chw_info/call_button">
        <label ref="jr:itext('/immunization_visit/group_chw_info/call_button:label')"/>
      </input>
      <select1 ref="/immunization_visit/group_chw_info/attended_imm">
        <label ref="jr:itext('/immunization_visit/group_chw_info/attended_imm:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_chw_info/attended_imm/yes:label')"/>
          <value>yes</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_chw_info/attended_imm/no:label')"/>
          <value>no</value>
        </item>
      </select1>
    </group>
    <group appearance="field-list" ref="/immunization_visit/group_select_vaccines">
      <label ref="jr:itext('/immunization_visit/group_select_vaccines:label')"/>
      <select ref="/immunization_visit/group_select_vaccines/g_vaccines">
        <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines:label')"/>
        <hint ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines:hint')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/bcg:label')"/>
          <value>bcg</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/cholera:label')"/>
          <value>cholera</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/hep_a:label')"/>
          <value>hep_a</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/hpv:label')"/>
          <value>hpv</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/flu:label')"/>
          <value>flu</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/jap_enc:label')"/>
          <value>jap_enc</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/meningococcal:label')"/>
          <value>meningococcal</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/mmr:label')"/>
          <value>mmr</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/mmrv:label')"/>
          <value>mmrv</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/polio:label')"/>
          <value>polio</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/penta:label')"/>
          <value>penta</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/pneumococcal:label')"/>
          <value>pneumococcal</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/rotavirus:label')"/>
          <value>rotavirus</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/typhoid:label')"/>
          <value>typhoid</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/vitamin_a:label')"/>
          <value>vitamin_a</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_select_vaccines/g_vaccines/yellow_fever:label')"/>
          <value>yellow_fever</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_bcg">
      <label ref="jr:itext('/immunization_visit/group_bcg:label')"/>
      <select1 ref="/immunization_visit/group_bcg/g_bcg">
        <label ref="jr:itext('/immunization_visit/group_bcg/g_bcg:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_bcg/g_bcg/yes:label')"/>
          <value>yes</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_bcg/g_bcg/no:label')"/>
          <value>no</value>
        </item>
      </select1>
    </group>
    <group ref="/immunization_visit/group_cholera">
      <label ref="jr:itext('/immunization_visit/group_cholera:label')"/>
      <select ref="/immunization_visit/group_cholera/g_cholera">
        <label ref="jr:itext('/immunization_visit/group_cholera/g_cholera:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_cholera/g_cholera/CH1:label')"/>
          <value>CH1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_cholera/g_cholera/CH2:label')"/>
          <value>CH2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_cholera/g_cholera/CH3:label')"/>
          <value>CH3</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_cholera/g_cholera/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_hep_a">
      <label ref="jr:itext('/immunization_visit/group_hep_a:label')"/>
      <select ref="/immunization_visit/group_hep_a/g_hep_a">
        <label ref="jr:itext('/immunization_visit/group_hep_a/g_hep_a:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_hep_a/g_hep_a/HA1:label')"/>
          <value>HA1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_hep_a/g_hep_a/HA2:label')"/>
          <value>HA2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_hep_a/g_hep_a/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_hpv">
      <label ref="jr:itext('/immunization_visit/group_hpv:label')"/>
      <select ref="/immunization_visit/group_hpv/g_hpv">
        <label ref="jr:itext('/immunization_visit/group_hpv/g_hpv:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_hpv/g_hpv/HPV1:label')"/>
          <value>HPV1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_hpv/g_hpv/HPV2:label')"/>
          <value>HPV2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_hpv/g_hpv/HPV3:label')"/>
          <value>HPV3</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_hpv/g_hpv/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_flu">
      <label ref="jr:itext('/immunization_visit/group_flu:label')"/>
      <select1 ref="/immunization_visit/group_flu/g_flu">
        <label ref="jr:itext('/immunization_visit/group_flu/g_flu:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_flu/g_flu/yes:label')"/>
          <value>yes</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_flu/g_flu/no:label')"/>
          <value>no</value>
        </item>
      </select1>
    </group>
    <group ref="/immunization_visit/group_jap_enc">
      <label ref="jr:itext('/immunization_visit/group_jap_enc:label')"/>
      <select1 ref="/immunization_visit/group_jap_enc/g_jap_enc">
        <label ref="jr:itext('/immunization_visit/group_jap_enc/g_jap_enc:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_jap_enc/g_jap_enc/yes:label')"/>
          <value>yes</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_jap_enc/g_jap_enc/no:label')"/>
          <value>no</value>
        </item>
      </select1>
    </group>
    <group ref="/immunization_visit/group_meningococcal">
      <label ref="jr:itext('/immunization_visit/group_meningococcal:label')"/>
      <select ref="/immunization_visit/group_meningococcal/g_meningococcal">
        <label ref="jr:itext('/immunization_visit/group_meningococcal/g_meningococcal:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_meningococcal/g_meningococcal/MN1:label')"/>
          <value>MN1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_meningococcal/g_meningococcal/MN2:label')"/>
          <value>MN2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_meningococcal/g_meningococcal/MN3:label')"/>
          <value>MN3</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_meningococcal/g_meningococcal/MN4:label')"/>
          <value>MN4</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_meningococcal/g_meningococcal/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_mmr">
      <label ref="jr:itext('/immunization_visit/group_mmr:label')"/>
      <select ref="/immunization_visit/group_mmr/g_mmr">
        <label ref="jr:itext('/immunization_visit/group_mmr/g_mmr:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_mmr/g_mmr/MMR1:label')"/>
          <value>MMR1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_mmr/g_mmr/MMR2:label')"/>
          <value>MMR2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_mmr/g_mmr/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_mmrv">
      <label ref="jr:itext('/immunization_visit/group_mmrv:label')"/>
      <select ref="/immunization_visit/group_mmrv/g_mmrv">
        <label ref="jr:itext('/immunization_visit/group_mmrv/g_mmrv:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_mmrv/g_mmrv/MMRV1:label')"/>
          <value>MMRV1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_mmrv/g_mmrv/MMRV2:label')"/>
          <value>MMRV2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_mmrv/g_mmrv/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_polio">
      <label ref="jr:itext('/immunization_visit/group_polio:label')"/>
      <select ref="/immunization_visit/group_polio/g_polio">
        <label ref="jr:itext('/immunization_visit/group_polio/g_polio:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_polio/g_polio/OPV0:label')"/>
          <value>OPV0</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_polio/g_polio/OPV1:label')"/>
          <value>OPV1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_polio/g_polio/OPV2:label')"/>
          <value>OPV2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_polio/g_polio/OPV3:label')"/>
          <value>OPV3</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_polio/g_polio/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_pentavalent">
      <label ref="jr:itext('/immunization_visit/group_pentavalent:label')"/>
      <select ref="/immunization_visit/group_pentavalent/g_pentavalent">
        <label ref="jr:itext('/immunization_visit/group_pentavalent/g_pentavalent:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pentavalent/g_pentavalent/DT1:label')"/>
          <value>DT1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pentavalent/g_pentavalent/DT2:label')"/>
          <value>DT2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pentavalent/g_pentavalent/DT3:label')"/>
          <value>DT3</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pentavalent/g_pentavalent/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_pneumococcal">
      <label ref="jr:itext('/immunization_visit/group_pneumococcal:label')"/>
      <select ref="/immunization_visit/group_pneumococcal/g_pneumococcal">
        <label ref="jr:itext('/immunization_visit/group_pneumococcal/g_pneumococcal:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pneumococcal/g_pneumococcal/PCV1:label')"/>
          <value>PCV1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pneumococcal/g_pneumococcal/PCV2:label')"/>
          <value>PCV2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pneumococcal/g_pneumococcal/PCV3:label')"/>
          <value>PCV3</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pneumococcal/g_pneumococcal/PCV4:label')"/>
          <value>PCV4</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_pneumococcal/g_pneumococcal/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_rotavirus">
      <label ref="jr:itext('/immunization_visit/group_rotavirus:label')"/>
      <select ref="/immunization_visit/group_rotavirus/g_rotavirus">
        <label ref="jr:itext('/immunization_visit/group_rotavirus/g_rotavirus:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_rotavirus/g_rotavirus/RV1:label')"/>
          <value>RV1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_rotavirus/g_rotavirus/RV2:label')"/>
          <value>RV2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_rotavirus/g_rotavirus/RV3:label')"/>
          <value>RV3</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_rotavirus/g_rotavirus/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_typhoid">
      <label ref="jr:itext('/immunization_visit/group_typhoid:label')"/>
      <select ref="/immunization_visit/group_typhoid/g_typhoid">
        <label ref="jr:itext('/immunization_visit/group_typhoid/g_typhoid:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_typhoid/g_typhoid/TY1:label')"/>
          <value>TY1</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_typhoid/g_typhoid/TY2:label')"/>
          <value>TY2</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_typhoid/g_typhoid/none:label')"/>
          <value>none</value>
        </item>
      </select>
    </group>
    <group ref="/immunization_visit/group_vitamin_a">
      <label ref="jr:itext('/immunization_visit/group_vitamin_a:label')"/>
      <select1 ref="/immunization_visit/group_vitamin_a/g_vitamin_a">
        <label ref="jr:itext('/immunization_visit/group_vitamin_a/g_vitamin_a:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_vitamin_a/g_vitamin_a/yes:label')"/>
          <value>yes</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_vitamin_a/g_vitamin_a/no:label')"/>
          <value>no</value>
        </item>
      </select1>
    </group>
    <group ref="/immunization_visit/group_yellow_fever">
      <label ref="jr:itext('/immunization_visit/group_yellow_fever:label')"/>
      <select1 ref="/immunization_visit/group_yellow_fever/g_yellow_fever">
        <label ref="jr:itext('/immunization_visit/group_yellow_fever/g_yellow_fever:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_yellow_fever/g_yellow_fever/yes:label')"/>
          <value>yes</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_yellow_fever/g_yellow_fever/no:label')"/>
          <value>no</value>
        </item>
      </select1>
    </group>
    <group appearance="field-list" ref="/immunization_visit/group_note">
      <label ref="jr:itext('/immunization_visit/group_note:label')"/>
      <select1 appearance="hidden" ref="/immunization_visit/group_note/default_chw_sms">
        <label ref="jr:itext('/immunization_visit/group_note/default_chw_sms:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_note/default_chw_sms/default:label')"/>
          <value>default</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_note/default_chw_sms/did_not_attend:label')"/>
          <value>did_not_attend</value>
        </item>
      </select1>
      <input ref="/immunization_visit/group_note/default_chw_sms_note">
        <label ref="jr:itext('/immunization_visit/group_note/default_chw_sms_note:label')"/>
      </input>
      <select1 appearance="hidden" ref="/immunization_visit/group_note/is_sms_edited">
        <label ref="jr:itext('/immunization_visit/group_note/is_sms_edited:label')"/>
        <item>
          <label ref="jr:itext('/immunization_visit/group_note/is_sms_edited/yes:label')"/>
          <value>yes</value>
        </item>
        <item>
          <label ref="jr:itext('/immunization_visit/group_note/is_sms_edited/no:label')"/>
          <value>no</value>
        </item>
      </select1>
      <input appearance="multiline" ref="/immunization_visit/group_note/g_chw_sms">
        <label ref="jr:itext('/immunization_visit/group_note/g_chw_sms:label')"/>
        <hint ref="jr:itext('/immunization_visit/group_note/g_chw_sms:hint')"/>
      </input>
    </group>
    <group appearance="field-list summary" ref="/immunization_visit/group_review">
      <input appearance="center" ref="/immunization_visit/group_review/submit">
        <label ref="jr:itext('/immunization_visit/group_review/submit:label')"/>
      </input>
      <input appearance="h1 yellow" ref="/immunization_visit/group_review/r_summary">
        <label ref="jr:itext('/immunization_visit/group_review/r_summary:label')"/>
      </input>
      <input appearance="h4 center" ref="/immunization_visit/group_review/r_pregnancy_details">
        <label ref="jr:itext('/immunization_visit/group_review/r_pregnancy_details:label')"/>
      </input>
      <input appearance="h1 blue" ref="/immunization_visit/group_review/r_visit">
        <label ref="jr:itext('/immunization_visit/group_review/r_visit:label')"/>
      </input>
      <input appearance="h4 center" ref="/immunization_visit/group_review/r_visit_yes">
        <label ref="jr:itext('/immunization_visit/group_review/r_visit_yes:label')"/>
      </input>
      <input appearance="h4 center" ref="/immunization_visit/group_review/r_visit_no">
        <label ref="jr:itext('/immunization_visit/group_review/r_visit_no:label')"/>
      </input>
      <input appearance="h2 blue" ref="/immunization_visit/group_review/r_vaccines_given">
        <label ref="jr:itext('/immunization_visit/group_review/r_vaccines_given:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_bcg">
        <label ref="jr:itext('/immunization_visit/group_review/r_bcg:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_cholera_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_cholera_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_cholera_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_cholera_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_cholera_3">
        <label ref="jr:itext('/immunization_visit/group_review/r_cholera_3:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_hep_a_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_hep_a_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_hep_a_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_hep_a_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_hpv_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_hpv_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_hpv_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_hpv_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_hpv_3">
        <label ref="jr:itext('/immunization_visit/group_review/r_hpv_3:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_flu">
        <label ref="jr:itext('/immunization_visit/group_review/r_flu:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_jap_enc">
        <label ref="jr:itext('/immunization_visit/group_review/r_jap_enc:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_meningococcal_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_meningococcal_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_meningococcal_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_meningococcal_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_meningococcal_3">
        <label ref="jr:itext('/immunization_visit/group_review/r_meningococcal_3:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_meningococcal_4">
        <label ref="jr:itext('/immunization_visit/group_review/r_meningococcal_4:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_mmr_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_mmr_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_mmr_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_mmr_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_mmrv_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_mmrv_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_mmrv_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_mmrv_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_opv_0">
        <label ref="jr:itext('/immunization_visit/group_review/r_opv_0:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_opv_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_opv_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_opv_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_opv_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_opv_3">
        <label ref="jr:itext('/immunization_visit/group_review/r_opv_3:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_penta_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_penta_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_penta_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_penta_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_penta_3">
        <label ref="jr:itext('/immunization_visit/group_review/r_penta_3:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_pneumococcal_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_pneumococcal_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_pneumococcal_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_pneumococcal_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_pneumococcal_3">
        <label ref="jr:itext('/immunization_visit/group_review/r_pneumococcal_3:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_pneumococcal_4">
        <label ref="jr:itext('/immunization_visit/group_review/r_pneumococcal_4:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_rotavirus_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_rotavirus_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_rotavirus_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_rotavirus_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_rotavirus_3">
        <label ref="jr:itext('/immunization_visit/group_review/r_rotavirus_3:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_typhoid_1">
        <label ref="jr:itext('/immunization_visit/group_review/r_typhoid_1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_typhoid_2">
        <label ref="jr:itext('/immunization_visit/group_review/r_typhoid_2:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_vitamin_a">
        <label ref="jr:itext('/immunization_visit/group_review/r_vitamin_a:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_yellow_fever">
        <label ref="jr:itext('/immunization_visit/group_review/r_yellow_fever:label')"/>
      </input>
      <input appearance="h1 green" ref="/immunization_visit/group_review/r_followup">
        <label ref="jr:itext('/immunization_visit/group_review/r_followup:label')"/>
      </input>
      <input ref="/immunization_visit/group_review/r_followup_note1">
        <label ref="jr:itext('/immunization_visit/group_review/r_followup_note1:label')"/>
      </input>
      <input appearance="li" ref="/immunization_visit/group_review/r_followup_note2">
        <label ref="jr:itext('/immunization_visit/group_review/r_followup_note2:label')"/>
      </input>
    </group>
  </h:body>
</h:html>
"
    }
  }
}
