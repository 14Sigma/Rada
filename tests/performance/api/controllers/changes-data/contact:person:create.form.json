{
  "_id": "form:contact:person:create",
  "type": "form",
  "internalId": "contact:person:create",
  "title": "New Person",
  "context": {
    "person": false,
    "place": false
  },
  "_attachments": {
    "xml": {
      "content_type": "application/xml",
      "revpos": 1,
      "digest": "md5-zKADf1CiN/OWzuRLukIozA==",
      "data": "<?xml version="1.0"?>
<h:html xmlns="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:jr="http://openrosa.org/javarosa" xmlns:orx="http://openrosa.org/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <h:head>
    <h:title>New Person</h:title>
    <model>
      <itext>
        <translation lang="sw">
          <text id="/data/person/role/manager:label">
            <value>Meneja wa Kituo cha afya</value>
          </text>
          <text id="/data/init/parent_id:label">
            <value>Ni wa</value>
          </text>
          <text id="/data/init/name:label">
            <value></value>
          </text>
          <text id="/data/person/role:label">
            <value>Jukumu</value>
          </text>
          <text id="/data/person/role/chw:label">
            <value>Mhudumu wa afya</value>
          </text>
          <text id="/data/person/role_other:hint">
            <value>Jukumu lingine lelote</value>
          </text>
          <text id="/data/person/phone_alternate:jr:constraintMsg">
            <value>-</value>
          </text>
          <text id="/data/inputs/user:label">
            <value></value>
          </text>
          <text id="/data/person/sex/male:label">
            <value>Kiume</value>
          </text>
          <text id="/data/inputs/user/name:label">
            <value>Jina ya mtumizi</value>
          </text>
          <text id="/data/init/type_selector:label">
            <value></value>
          </text>
          <text id="/data/init:label">
            <value>Mtu mpya</value>
          </text>
          <text id="/data/person/sex:label">
            <value>Jinsia</value>
          </text>
          <text id="/data/person:label">
            <value></value>
          </text>
          <text id="/data/person/meta:label">
            <value></value>
          </text>
          <text id="/data/person/date_of_birth:label">
            <value>Tarehe ya Kuzaliwa</value>
          </text>
          <text id="/data/person/role/patient:label">
            <value>mgonjwa</value>
          </text>
          <text id="/data/init/parent_id:hint">
            <value><output value=" /data/init/type_label "/></value>
          </text>
          <text id="/data/person/phone_alternate:label">
            <value>nambari nyingine ya simu</value>
          </text>
          <text id="/data/person/role:hint">
            <value>Chagua jukumu linachoambatana na huyu mtu</value>
          </text>
          <text id="/data/inputs/user/facility_id:label">
            <value>Kitambulisho cha mahali cha mtumizi wa huduma hii</value>
          </text>
          <text id="/data/person/external_id:label">
            <value>ID ya nje</value>
          </text>
          <text id="/data/person/role/other:label">
            <value>Ingine</value>
          </text>
          <text id="/data/person/type:label">
            <value>Jina</value>
          </text>
          <text id="/data/person/notes:label">
            <value>Maelezo</value>
          </text>
          <text id="/data/person/sex/female:label">
            <value>Kike</value>
          </text>
          <text id="/data/person/name:label">
            <value>Majina</value>
          </text>
          <text id="/data/person/role/chw_supervisor:label">
            <value>Mkuu wa wahudumu wa afya</value>
          </text>
          <text id="/data/init/type:label">
            <value></value>
          </text>
          <text id="/data/person/phone:jr:constraintMsg">
            <value>-</value>
          </text>
          <text id="/data/inputs:label">
            <value></value>
          </text>
          <text id="/data/person/phone:label">
            <value>Nambari ya simu</value>
          </text>
          <text id="/data/init/type_selector/district_hospital:label">
            <value>Wilaya</value>
          </text>
          <text id="/data/init/type_selector/health_center:label">
            <value>Kituo cha afya</value>
          </text>
          <text id="/data/inputs/user/contact_id:label">
            <value>Namba ya Usajilisho ya mtumiaji wa huduma hii</value>
          </text>
          <text id="/data/person/parent:label">
            <value>ID ya mzazi</value>
          </text>
          <text id="/data/person/role/nurse:label">
            <value>Muuguzi</value>
          </text>
          <text id="/data/init/type_selector/clinic:label">
            <value>Eneo</value>
          </text>
          <text id="/data/person/role_other:label">
            <value></value>
          </text>
        </translation>
        <translation lang="hi">
          <text id="/data/person/role/manager:label">
            <value>स्वास्थ्य केंद्र के मैनजर</value>
          </text>
          <text id="/data/init/parent_id:label">
            <value>यह व्यक्ति इस जगह से जुड़ा है</value>
          </text>
          <text id="/data/init/name:label">
            <value></value>
          </text>
          <text id="/data/person/role:label">
            <value>भूमिका</value>
          </text>
          <text id="/data/person/role/chw:label">
            <value>सामुदायिक स्वास्थ्यकर्मी</value>
          </text>
          <text id="/data/person/role_other:hint">
            <value>अन्य का उल्‍लेख करें</value>
          </text>
          <text id="/data/person/phone_alternate:jr:constraintMsg">
            <value>-</value>
          </text>
          <text id="/data/inputs/user:label">
            <value></value>
          </text>
          <text id="/data/person/sex/male:label">
            <value>पुरूष</value>
          </text>
          <text id="/data/inputs/user/name:label">
            <value>लॉग इन यूज़र का नाम</value>
          </text>
          <text id="/data/init/type_selector:label">
            <value></value>
          </text>
          <text id="/data/init:label">
            <value>नया व्यक्ति</value>
          </text>
          <text id="/data/person/sex:label">
            <value>लिंग</value>
          </text>
          <text id="/data/person:label">
            <value></value>
          </text>
          <text id="/data/person/meta:label">
            <value></value>
          </text>
          <text id="/data/person/date_of_birth:label">
            <value>जन्म की तारीख</value>
          </text>
          <text id="/data/person/role/patient:label">
            <value>मरीज़</value>
          </text>
          <text id="/data/init/parent_id:hint">
            <value><output value=" /data/init/type_label "/></value>
          </text>
          <text id="/data/person/phone_alternate:label">
            <value>अन्य फोन नंबर</value>
          </text>
          <text id="/data/person/role:hint">
            <value>उस भूमिका का चयन करें जो इस व्यक्ति को सबसे अच्छा सूट करता है</value>
          </text>
          <text id="/data/inputs/user/facility_id:label">
            <value>लॉग इन यूज़र के स्थान का ID</value>
          </text>
          <text id="/data/person/external_id:label">
            <value>बाहरी ID</value>
          </text>
          <text id="/data/person/role/other:label">
            <value>अन्य</value>
          </text>
          <text id="/data/person/type:label">
            <value>व्यक्ति के प्रकार</value>
          </text>
          <text id="/data/person/notes:label">
            <value>नोट्स</value>
          </text>
          <text id="/data/person/sex/female:label">
            <value>स्त्री</value>
          </text>
          <text id="/data/person/name:label">
            <value>नाम</value>
          </text>
          <text id="/data/person/role/chw_supervisor:label">
            <value>सामुदायिक स्वास्थ्यकर्मी के मैनेजर</value>
          </text>
          <text id="/data/init/type:label">
            <value></value>
          </text>
          <text id="/data/person/phone:jr:constraintMsg">
            <value>-</value>
          </text>
          <text id="/data/inputs:label">
            <value></value>
          </text>
          <text id="/data/person/phone:label">
            <value>फोन नंबर</value>
          </text>
          <text id="/data/init/type_selector/district_hospital:label">
            <value>ज़िला</value>
          </text>
          <text id="/data/init/type_selector/health_center:label">
            <value>स्वास्थ्य केंद्र</value>
          </text>
          <text id="/data/inputs/user/contact_id:label">
            <value>Contact ID of the logged in user</value>
          </text>
          <text id="/data/person/parent:label">
            <value>मूल ID</value>
          </text>
          <text id="/data/person/role/nurse:label">
            <value>नर्स</value>
          </text>
          <text id="/data/init/type_selector/clinic:label">
            <value>क्षेत्र</value>
          </text>
          <text id="/data/person/role_other:label">
            <value></value>
          </text>
        </translation>
        <translation lang="en">
          <text id="/data/inputs:label">
            <value></value>
          </text>
          <text id="/data/init/parent_id:label">
            <value>Belongs To</value>
          </text>
          <text id="/data/init/name:label">
            <value></value>
          </text>
          <text id="/data/person/role:label">
            <value>Role</value>
          </text>
          <text id="/data/person/role/chw:label">
            <value>CHW</value>
          </text>
          <text id="/data/person/role_other:hint">
            <value>Specify other</value>
          </text>
          <text id="/data/person/role/manager:label">
            <value>Facility Manager</value>
          </text>
          <text id="/data/person/phone_alternate:jr:constraintMsg">
            <value>Please enter a valid local number, or use the standard international format, which includes a plus sign (+) and country code. For example: +254712345678</value>
          </text>
          <text id="/data/inputs/user:label">
            <value></value>
          </text>
          <text id="/data/person/sex/male:label">
            <value>Male</value>
          </text>
          <text id="/data/inputs/user/name:label">
            <value>Name of the logged in user</value>
          </text>
          <text id="/data/init/type_selector:label">
            <value></value>
          </text>
          <text id="/data/init:label">
            <value>New Person</value>
          </text>
          <text id="/data/person/sex:label">
            <value>Sex</value>
          </text>
          <text id="/data/person:label">
            <value></value>
          </text>
          <text id="/data/person/meta:label">
            <value></value>
          </text>
          <text id="/data/person/date_of_birth:label">
            <value>Date of Birth</value>
          </text>
          <text id="/data/person/role/patient:label">
            <value>Patient</value>
          </text>
          <text id="/data/init/parent_id:hint">
            <value><output value=" /data/init/type_label "/></value>
          </text>
          <text id="/data/person/phone_alternate:label">
            <value>Alternate Phone Number</value>
          </text>
          <text id="/data/person/role:hint">
            <value>Select the role that best suits this person</value>
          </text>
          <text id="/data/inputs/user/facility_id:label">
            <value>Place ID of the logged in user</value>
          </text>
          <text id="/data/person/external_id:label">
            <value>External ID</value>
          </text>
          <text id="/data/person/role/other:label">
            <value>Other</value>
          </text>
          <text id="/data/person/type:label">
            <value>Person Type</value>
          </text>
          <text id="/data/person/notes:label">
            <value>Notes</value>
          </text>
          <text id="/data/person/sex/female:label">
            <value>Female</value>
          </text>
          <text id="/data/person/name:label">
            <value>Names</value>
          </text>
          <text id="/data/person/role/chw_supervisor:label">
            <value>CHW Supervisor</value>
          </text>
          <text id="/data/init/type:label">
            <value></value>
          </text>
          <text id="/data/person/phone:jr:constraintMsg">
            <value>Please enter a valid local number, or use the standard international format, which includes a plus sign (+) and country code. For example: +254712345678</value>
          </text>
          <text id="/data/person/phone:label">
            <value>Phone Number</value>
          </text>
          <text id="/data/init/type_selector/district_hospital:label">
            <value>District</value>
          </text>
          <text id="/data/init/type_selector/health_center:label">
            <value>Health Center</value>
          </text>
          <text id="/data/inputs/user/contact_id:label">
            <value>Contact ID of the logged in user</value>
          </text>
          <text id="/data/person/parent:label">
            <value>Parent ID</value>
          </text>
          <text id="/data/person/role/nurse:label">
            <value>Nurse</value>
          </text>
          <text id="/data/init/type_selector/clinic:label">
            <value>Area</value>
          </text>
          <text id="/data/person/role_other:label">
            <value></value>
          </text>
        </translation>
        <translation lang="ne">
          <text id="/data/person/role/manager:label">
            <value>स्वास्थ्य संस्था प्रमुख</value>
          </text>
          <text id="/data/init/parent_id:label">
            <value>यो व्यक्ति यस ठाउँसँग सम्बन्धित छ</value>
          </text>
          <text id="/data/person/role:hint">
            <value>यस व्यक्तिका लागि उपयुक्त भूमिका छान्नुहोस्</value>
          </text>
          <text id="/data/person/role:label">
            <value>भूमिका</value>
          </text>
          <text id="/data/person/role/chw:label">
            <value>महिला स्वास्थ्य स्वयम् सेविका</value>
          </text>
          <text id="/data/person/role_other:hint">
            <value>अन्य उल्लेख गर्नुहोस्</value>
          </text>
          <text id="/data/person/phone_alternate:jr:constraintMsg">
            <value>-</value>
          </text>
          <text id="/data/inputs/user:label">
            <value></value>
          </text>
          <text id="/data/init/type_selector/district_hospital:label">
            <value>जिल्ला</value>
          </text>
          <text id="/data/inputs/user/name:label">
            <value>लग इन गरेको प्रयोगकर्ताको नाम</value>
          </text>
          <text id="/data/init/type_selector:label">
            <value></value>
          </text>
          <text id="/data/init:label">
            <value>नयाँ व्यक्ति</value>
          </text>
          <text id="/data/person/sex:label">
            <value>लिंग</value>
          </text>
          <text id="/data/person:label">
            <value></value>
          </text>
          <text id="/data/person/meta:label">
            <value></value>
          </text>
          <text id="/data/person/date_of_birth:label">
            <value>जन्म मिती</value>
          </text>
          <text id="/data/person/role/patient:label">
            <value>बिरामी</value>
          </text>
          <text id="/data/init/parent_id:hint">
            <value><output value=" /data/init/type_label "/></value>
          </text>
          <text id="/data/person/phone_alternate:label">
            <value>अन्य फोन नम्बर</value>
          </text>
          <text id="/data/inputs/user/facility_id:label">
            <value>लग इन गरेको प्रयोगकर्ताको स्थानको ID</value>
          </text>
          <text id="/data/person/external_id:label">
            <value>बाहिरी ID</value>
          </text>
          <text id="/data/person/role/other:label">
            <value>अन्य</value>
          </text>
          <text id="/data/person/type:label">
            <value>-</value>
          </text>
          <text id="/data/init/name:label">
            <value></value>
          </text>
          <text id="/data/person/notes:label">
            <value>टिप्पणी</value>
          </text>
          <text id="/data/person/sex/female:label">
            <value>महिला</value>
          </text>
          <text id="/data/person/name:label">
            <value>नाम</value>
          </text>
          <text id="/data/person/role/chw_supervisor:label">
            <value>महिला स्वास्थ्य स्वयम् सेविकाको सुपरभाइजर</value>
          </text>
          <text id="/data/init/type:label">
            <value></value>
          </text>
          <text id="/data/person/phone:jr:constraintMsg">
            <value>-</value>
          </text>
          <text id="/data/inputs:label">
            <value></value>
          </text>
          <text id="/data/person/phone:label">
            <value>फोन नम्बर</value>
          </text>
          <text id="/data/person/sex/male:label">
            <value>पुरुष</value>
          </text>
          <text id="/data/init/type_selector/health_center:label">
            <value>स्वास्थ्य केन्द्र</value>
          </text>
          <text id="/data/inputs/user/contact_id:label">
            <value>लग इन गरेको प्रयोगकर्ताको सम्पर्क ID</value>
          </text>
          <text id="/data/person/parent:label">
            <value>-</value>
          </text>
          <text id="/data/person/role/nurse:label">
            <value>नर्स</value>
          </text>
          <text id="/data/init/type_selector/clinic:label">
            <value>क्षेत्र</value>
          </text>
          <text id="/data/person/role_other:label">
            <value></value>
          </text>
        </translation>
        <translation lang="id">
          <text id="/data/person/role/manager:label">
            <value>Manajer Fasilitas</value>
          </text>
          <text id="/data/init/parent_id:label">
            <value>Orang ini terhubung ke tempat ini</value>
          </text>
          <text id="/data/init/name:label">
            <value></value>
          </text>
          <text id="/data/person/role:label">
            <value>Peran</value>
          </text>
          <text id="/data/person/role/chw:label">
            <value>Kader</value>
          </text>
          <text id="/data/person/role_other:hint">
            <value>Tentukan lainnya</value>
          </text>
          <text id="/data/person/phone_alternate:jr:constraintMsg">
            <value>-</value>
          </text>
          <text id="/data/inputs/user:label">
            <value></value>
          </text>
          <text id="/data/person/sex/male:label">
            <value>Pria</value>
          </text>
          <text id="/data/inputs/user/name:label">
            <value>Nama dari login user</value>
          </text>
          <text id="/data/init/type_selector:label">
            <value></value>
          </text>
          <text id="/data/init:label">
            <value>Orang Baru</value>
          </text>
          <text id="/data/person/sex:label">
            <value>Jenis kelamin</value>
          </text>
          <text id="/data/person:label">
            <value></value>
          </text>
          <text id="/data/person/meta:label">
            <value></value>
          </text>
          <text id="/data/person/date_of_birth:label">
            <value>Tanggal Lahir</value>
          </text>
          <text id="/data/person/role/patient:label">
            <value>Pasien</value>
          </text>
          <text id="/data/init/parent_id:hint">
            <value><output value=" /data/init/type_label "/></value>
          </text>
          <text id="/data/person/phone_alternate:label">
            <value>Nomor Telepon Alternatif</value>
          </text>
          <text id="/data/person/role:hint">
            <value>Pilih peran yang paling cocok untuk orang ini</value>
          </text>
          <text id="/data/inputs/user/facility_id:label">
            <value>ID Tempat dari login user</value>
          </text>
          <text id="/data/person/external_id:label">
            <value>Eksternal ID</value>
          </text>
          <text id="/data/person/role/other:label">
            <value>Lain</value>
          </text>
          <text id="/data/person/type:label">
            <value>Tipe Orang</value>
          </text>
          <text id="/data/person/notes:label">
            <value>Catatan</value>
          </text>
          <text id="/data/person/sex/female:label">
            <value>Wanita</value>
          </text>
          <text id="/data/person/name:label">
            <value>Nama</value>
          </text>
          <text id="/data/person/role/chw_supervisor:label">
            <value>Kader Pengawas</value>
          </text>
          <text id="/data/init/type:label">
            <value></value>
          </text>
          <text id="/data/person/phone:jr:constraintMsg">
            <value>-</value>
          </text>
          <text id="/data/inputs:label">
            <value></value>
          </text>
          <text id="/data/person/phone:label">
            <value>Nomor Telepon</value>
          </text>
          <text id="/data/init/type_selector/district_hospital:label">
            <value>Kabupaten</value>
          </text>
          <text id="/data/init/type_selector/health_center:label">
            <value>Fasilitas Kesehatan</value>
          </text>
          <text id="/data/inputs/user/contact_id:label">
            <value>Contact ID of the logged in user</value>
          </text>
          <text id="/data/person/parent:label">
            <value>Asli ID</value>
          </text>
          <text id="/data/person/role/nurse:label">
            <value>Perawat</value>
          </text>
          <text id="/data/init/type_selector/clinic:label">
            <value>Daerah</value>
          </text>
          <text id="/data/person/role_other:label">
            <value></value>
          </text>
        </translation>
      </itext>
      <instance>
        <data delimiter="#" id="contact:person:create" prefix="J1!contact:person:create!" version="2018-02-28_20-34">
          <inputs>
            <meta>
              <location>
                <lat/>
                <long/>
                <error/>
                <message/>
              </location>
            </meta>
            <user>
              <contact_id/>
              <facility_id/>
              <name/>
            </user>
          </inputs>
          <person>
            <parent>PARENT</parent>
            <type>person</type>
            <name/>
            <date_of_birth/>
            <phone/>
            <phone_alternate/>
            <sex/>
            <role/>
            <role_other/>
            <external_id/>
            <notes/>
            <meta>
              <created_by/>
              <created_by_person_uuid/>
              <created_by_place_uuid/>
            </meta>
          </person>
          <init>
            <parent_id/>
            <name/>
            <type/>
            <type_selector/>
            <type_label/>
          </init>
          <meta>
            <instanceID/>
          </meta>
        </data>
      </instance>
      <bind nodeset="/data/inputs" relevant="false()"/>
      <bind nodeset="/data/inputs/user/contact_id" type="string"/>
      <bind nodeset="/data/inputs/user/facility_id" type="string"/>
      <bind nodeset="/data/inputs/user/name" type="string"/>
      <bind calculate=" /data/person/parent " nodeset="/data/init/parent_id" readonly="true()" type="string"/>
      <bind nodeset="/data/init/name" type="string"/>
      <bind nodeset="/data/init/type" type="string"/>
      <bind calculate="../type" nodeset="/data/init/type_selector" type="select1"/>
      <bind calculate="jr:choice-name( /data/init/type_selector ,' /data/init/type_selector ')" nodeset="/data/init/type_label" type="string"/>
      <bind nodeset="/data/person/parent" type="string"/>
      <bind nodeset="/data/person/type" type="string"/>
      <bind nodeset="/data/person/name" required="true()" type="string"/>
      <bind nodeset="/data/person/date_of_birth" type="date"/>
      <bind constraint="true()" jr:constraintMsg="jr:itext('/data/person/phone:jr:constraintMsg')" nodeset="/data/person/phone" type="tel"/>
      <bind constraint="true()" jr:constraintMsg="jr:itext('/data/person/phone_alternate:jr:constraintMsg')" nodeset="/data/person/phone_alternate" type="tel"/>
      <bind nodeset="/data/person/sex" type="select1"/>
      <bind nodeset="/data/person/role" type="select1"/>
      <bind nodeset="/data/person/role_other" relevant="selected(  /data/person/role ,'other')" required="true()" type="string"/>
      <bind nodeset="/data/person/external_id" type="string"/>
      <bind nodeset="/data/person/notes" type="string"/>
      <bind calculate="../../../inputs/user/name" nodeset="/data/person/meta/created_by" type="string"/>
      <bind calculate="../../../inputs/user/contact_id" nodeset="/data/person/meta/created_by_person_uuid" type="string"/>
      <bind calculate="../../../inputs/user/facility_id" nodeset="/data/person/meta/created_by_place_uuid" type="string"/>
      <bind calculate="concat('uuid:', uuid())" nodeset="/data/meta/instanceID" readonly="true()" type="string"/>
    </model>
  </h:head>
  <h:body>
    <group ref="/data/inputs">
      <label ref="jr:itext('/data/inputs:label')"/>
      <group ref="/data/inputs/user">
        <label ref="jr:itext('/data/inputs/user:label')"/>
        <input ref="/data/inputs/user/contact_id">
          <label ref="jr:itext('/data/inputs/user/contact_id:label')"/>
        </input>
        <input ref="/data/inputs/user/facility_id">
          <label ref="jr:itext('/data/inputs/user/facility_id:label')"/>
        </input>
        <input ref="/data/inputs/user/name">
          <label ref="jr:itext('/data/inputs/user/name:label')"/>
        </input>
      </group>
    </group>
    <group ref="/data/init">
      <label ref="jr:itext('/data/init:label')"/>
      <input appearance="db-object" ref="/data/init/parent_id">
        <label ref="jr:itext('/data/init/parent_id:label')"/>
        <hint ref="jr:itext('/data/init/parent_id:hint')"/>
      </input>
      <input appearance="hidden" ref="/data/init/name">
        <label ref="jr:itext('/data/init/name:label')"/>
      </input>
      <input appearance="hidden" ref="/data/init/type">
        <label ref="jr:itext('/data/init/type:label')"/>
      </input>
      <select1 appearance="hidden" ref="/data/init/type_selector">
        <label ref="jr:itext('/data/init/type_selector:label')"/>
        <item>
          <label ref="jr:itext('/data/init/type_selector/district_hospital:label')"/>
          <value>district_hospital</value>
        </item>
        <item>
          <label ref="jr:itext('/data/init/type_selector/health_center:label')"/>
          <value>health_center</value>
        </item>
        <item>
          <label ref="jr:itext('/data/init/type_selector/clinic:label')"/>
          <value>clinic</value>
        </item>
      </select1>
    </group>
    <group ref="/data/person">
      <label ref="jr:itext('/data/person:label')"/>
      <input ref="/data/person/name">
        <label ref="jr:itext('/data/person/name:label')"/>
      </input>
      <input ref="/data/person/date_of_birth">
        <label ref="jr:itext('/data/person/date_of_birth:label')"/>
      </input>
      <input ref="/data/person/phone">
        <label ref="jr:itext('/data/person/phone:label')"/>
      </input>
      <input ref="/data/person/phone_alternate">
        <label ref="jr:itext('/data/person/phone_alternate:label')"/>
      </input>
      <select1 appearance="horizontal" ref="/data/person/sex">
        <label ref="jr:itext('/data/person/sex:label')"/>
        <item>
          <label ref="jr:itext('/data/person/sex/female:label')"/>
          <value>female</value>
        </item>
        <item>
          <label ref="jr:itext('/data/person/sex/male:label')"/>
          <value>male</value>
        </item>
      </select1>
      <select1 ref="/data/person/role">
        <label ref="jr:itext('/data/person/role:label')"/>
        <hint ref="jr:itext('/data/person/role:hint')"/>
        <item>
          <label ref="jr:itext('/data/person/role/chw:label')"/>
          <value>chw</value>
        </item>
        <item>
          <label ref="jr:itext('/data/person/role/chw_supervisor:label')"/>
          <value>chw_supervisor</value>
        </item>
        <item>
          <label ref="jr:itext('/data/person/role/nurse:label')"/>
          <value>nurse</value>
        </item>
        <item>
          <label ref="jr:itext('/data/person/role/manager:label')"/>
          <value>manager</value>
        </item>
        <item>
          <label ref="jr:itext('/data/person/role/patient:label')"/>
          <value>patient</value>
        </item>
        <item>
          <label ref="jr:itext('/data/person/role/other:label')"/>
          <value>other</value>
        </item>
      </select1>
      <input ref="/data/person/role_other">
        <label ref="jr:itext('/data/person/role_other:label')"/>
        <hint ref="jr:itext('/data/person/role_other:hint')"/>
      </input>
      <input ref="/data/person/external_id">
        <label ref="jr:itext('/data/person/external_id:label')"/>
      </input>
      <input appearance="multiline" ref="/data/person/notes">
        <label ref="jr:itext('/data/person/notes:label')"/>
      </input>
      <group appearance="hidden" ref="/data/person/meta">
        <label ref="jr:itext('/data/person/meta:label')"/>
      </group>
    </group>
  </h:body>
</h:html>
"
    }
  }
}
