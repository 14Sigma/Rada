{
    "lib": {
        "index": "exports.views = require('./views');\nexports.filters = require('./filters');\n",
        "views": "exports.due_tasks = {\n    map: function(doc) {\n        var tasks = doc.scheduled_tasks || [];\n\n        tasks.forEach(function(task, index) {\n            if (task.due) {\n                emit(task.due, index);\n            }\n        });\n    }\n};\n\n/*\n * Get clinic based on phone number\n */\nexports.clinic_by_phone = {\n    map: function(doc) {\n        if (doc.type === 'clinic' && doc.contact && doc.contact.phone) {\n            emit([doc.contact.phone], null);\n        }\n    }\n};\n\n/*\n * Get clinic based on reference id\n */\nexports.clinic_by_refid = {\n    map: function (doc) {\n        if (doc.type === 'clinic' && doc.contact && doc.contact.rc_code) {\n            // need String because rewriter wraps everything in quotes\n            emit([String(doc.contact.rc_code)], null);\n        }\n    }\n};\n\nexports.weekly_reminders = {\n  map: function(doc) {\n    var phone,\n        refid;\n\n    if (doc.form && doc.week_number && doc.year) {\n      phone = doc.related_entities && doc.related_entities.clinic && doc.related_entities.clinic.contact &&\n        doc.related_entities.clinic.contact.phone;\n      if (phone) {\n        emit([doc.form, doc.year, doc.week_number, phone], {\n          received: true\n        });\n      }\n    } else if (doc.type === 'weekly_reminder' && doc.related_form && doc.week && doc.year) {\n      emit([doc.related_form, doc.year, doc.week, doc.phone], {\n        sent: doc.day\n      });\n    }\n  },\n  reduce: function(keys, values) {\n    var result = {\n      received: false,\n      sent: []\n    };\n\n    values.forEach(function(value) {\n      if (value.sent) {\n        result.sent.push(value.sent);\n      }\n      result.received = result.received || !!value.received;\n    });\n    return result;\n  }\n}\n\nexports.ohw_registered_patients = {\n    map: function(doc) {\n        var ids = doc.patient_identifiers || [];\n\n        if (doc.form === 'ORPT') {\n            ids.forEach(function(id) {\n                emit(id, null);\n            });\n        }\n    }\n};\n",
        "filters": "exports.update_clinics = function(doc) {\n    return doc.form &&\n        doc.related_entities &&\n        !doc.related_entities.clinic;\n};\n\nexports.ohw_anc_report = function(doc) {\n    var transitions = require('filters/lib/transition');\n\n    return transitions.check(doc) || doc.form === 'OANC' &&\n        doc.related_entities &&\n        doc.related_entities.clinic;\n};\n\nexports.ohw_pnc_report = function(doc) {\n    return doc.form === 'OPNC' &&\n        doc.related_entities &&\n        doc.related_entities.clinic;\n};\n\nexports.ohw_birth_report = function(doc) {\n    return doc.form === 'OBIR' &&\n        doc.patient_id &&\n        doc.related_entities &&\n        doc.related_entities.clinic;\n};\n\nexports.ohw_danger_sign = function(doc) {\n    return doc.form === 'ODGR' &&\n        doc.patient_id &&\n        doc.related_entities &&\n        doc.related_entities.clinic;\n};\n\nexports.ohw_labor_report = function(doc) {\n    return doc.form === 'OLAB' &&\n        doc.patient_id &&\n        doc.related_entities &&\n        doc.related_entities.clinic;\n};\n\nexports.ohw_notifications = function(doc) {\n    return doc.form === 'ONOT' &&\n        doc.patient_id &&\n        doc.related_entities &&\n        doc.related_entities.clinic;\n};\n\nexports.ohw_registration = function(doc) {\n    return doc.form === 'ORPT' &&\n        doc.related_entities &&\n        doc.related_entities.clinic &&\n        (!doc.patient_identifiers || doc.patient_identifiers.length === 0);\n};\n\nexports.twilio_message = function(doc) {\n    var tasks = doc.tasks || [];\n\n    return tasks.some(function(task) {\n        return task.state === 'pending';\n    });\n};\n"
    },
    "filters": {
        "lib": {
            "transition": "exports.check = function(doc, key) {\n    return false;\n}\n"
        },
        "update_clinics": "function(){return require(\"lib/index\")[\"filters\"][\"update_clinics\"].apply(this, arguments);}",
        "ohw_anc_report": "function(){return require(\"lib/index\")[\"filters\"][\"ohw_anc_report\"].apply(this, arguments);}",
        "ohw_pnc_report": "function(){return require(\"lib/index\")[\"filters\"][\"ohw_pnc_report\"].apply(this, arguments);}",
        "ohw_birth_report": "function(){return require(\"lib/index\")[\"filters\"][\"ohw_birth_report\"].apply(this, arguments);}",
        "ohw_danger_sign": "function(){return require(\"lib/index\")[\"filters\"][\"ohw_danger_sign\"].apply(this, arguments);}",
        "ohw_labor_report": "function(){return require(\"lib/index\")[\"filters\"][\"ohw_labor_report\"].apply(this, arguments);}",
        "ohw_notifications": "function(){return require(\"lib/index\")[\"filters\"][\"ohw_notifications\"].apply(this, arguments);}",
        "ohw_registration": "function(){return require(\"lib/index\")[\"filters\"][\"ohw_registration\"].apply(this, arguments);}",
        "twilio_message": "function(){return require(\"lib/index\")[\"filters\"][\"twilio_message\"].apply(this, arguments);}"
    },
    "views": {
        "due_tasks": {
            "map": "function (doc) {\n        var tasks = doc.scheduled_tasks || [];\n\n        tasks.forEach(function(task, index) {\n            if (task.due) {\n                emit(task.due, index);\n            }\n        });\n    }"
        },
        "clinic_by_phone": {
            "map": "function (doc) {\n        if (doc.type === 'clinic' && doc.contact && doc.contact.phone) {\n            emit([doc.contact.phone], null);\n        }\n    }"
        },
        "clinic_by_refid": {
            "map": "function (doc) {\n        if (doc.type === 'clinic' && doc.contact && doc.contact.rc_code) {\n            // need String because rewriter wraps everything in quotes\n            emit([String(doc.contact.rc_code)], null);\n        }\n    }"
        },
        "weekly_reminders": {
            "map": "function (doc) {\n    var phone,\n        refid;\n\n    if (doc.form && doc.week_number && doc.year) {\n      phone = doc.related_entities && doc.related_entities.clinic && doc.related_entities.clinic.contact &&\n        doc.related_entities.clinic.contact.phone;\n      if (phone) {\n        emit([doc.form, doc.year, doc.week_number, phone], {\n          received: true\n        });\n      }\n    } else if (doc.type === 'weekly_reminder' && doc.related_form && doc.week && doc.year) {\n      emit([doc.related_form, doc.year, doc.week, doc.phone], {\n        sent: doc.day\n      });\n    }\n  }",
            "reduce": "function (keys, values) {\n    var result = {\n      received: false,\n      sent: []\n    };\n\n    values.forEach(function(value) {\n      if (value.sent) {\n        result.sent.push(value.sent);\n      }\n      result.received = result.received || !!value.received;\n    });\n    return result;\n  }"
        },
        "ohw_registered_patients": {
            "map": "function (doc) {\n        var ids = doc.patient_identifiers || [];\n\n        if (doc.form === 'ORPT') {\n            ids.forEach(function(id) {\n                emit(id, null);\n            });\n        }\n    }"
        }
    },
    "rewrites": [],
    "_attachments": {
        "modules.js": {
            "content_type": "application/json; charset=utf-8",
            "data": "LypnbG9iYWwgd2luZG93OiBmYWxzZSwgJDogZmFsc2UsIHBhZ2VUcmFja2VyOiBmYWxzZSwga2Fuc286IHRydWUgKi8KCi8qKgogKiBDb2RlIHJlcXVpcmVkIHRvIGJvb3RzdHJhcCB0aGUgYnJvd3NlciBDb21tb25KUyBlbnZpcm9ubWVudC4KICovCgooZnVuY3Rpb24gKGV4cG9ydHMpIHsKCiAgICBleHBvcnRzLm1vZHVsZUNhY2hlID0ge307CgogICAgZXhwb3J0cy5ub3JtYWxpemVQYXRoID0gZnVuY3Rpb24gKHApIHsKICAgICAgICB2YXIgcGF0aCA9IFtdOwogICAgICAgIHZhciBwYXJ0cyA9IHAuc3BsaXQoJy8nKTsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICAgIGlmIChwYXJ0c1tpXSA9PT0gJy4uJykgewogICAgICAgICAgICAgICAgcGF0aC5wb3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChwYXJ0c1tpXSAhPT0gJy4nKSB7CiAgICAgICAgICAgICAgICBwYXRoLnB1c2gocGFydHNbaV0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBwYXRoLmpvaW4oJy8nKTsKICAgIH07CgogICAgZXhwb3J0cy5kaXJuYW1lID0gZnVuY3Rpb24gKHApIHsKICAgICAgICBpZiAocCA9PT0gJy8nKSB7CiAgICAgICAgICAgIHJldHVybiBwOwogICAgICAgIH0KICAgICAgICB2YXIgcGFydHMgPSBwLnNwbGl0KCcvJyk7CiAgICAgICAgcGFydHMucG9wKCk7CiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMSAmJiBwYXJ0c1swXSA9PT0gJycpIHsKICAgICAgICAgICAgcmV0dXJuICcvJzsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHBhcnRzLmpvaW4oJy8nKTsKICAgIH07CgogICAgZXhwb3J0cy5jcmVhdGVSZXF1aXJlID0gZnVuY3Rpb24gKGN1cnJlbnQpIHsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCkgewogICAgICAgICAgICB2YXIgcGF0aDsKICAgICAgICAgICAgaWYgKHRhcmdldC5jaGFyQXQoMCkgPT09ICcuJykgewogICAgICAgICAgICAgICAgdmFyIGRpciA9IGV4cG9ydHMuZGlybmFtZShjdXJyZW50KTsKICAgICAgICAgICAgICAgIHBhdGggPSBleHBvcnRzLm5vcm1hbGl6ZVBhdGgoZGlyICsgJy8nICsgdGFyZ2V0KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHBhdGggPSBleHBvcnRzLm5vcm1hbGl6ZVBhdGgodGFyZ2V0KTsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgbSA9IGthbnNvLm1vZHVsZUNhY2hlW3BhdGhdOwogICAgICAgICAgICBpZiAoIW0pIHsKICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gc3VjaCBtb2R1bGU6ICcgKyBwYXRoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIW0ubG9hZGVkKSB7CiAgICAgICAgICAgICAgICBtLmV4cG9ydHMgPSB7fTsKICAgICAgICAgICAgICAgIG0uaWQgPSBwYXRoOwogICAgICAgICAgICAgICAgLy8gVE9ETzogcHJvcGVydHkgbm90IHByb3ZpZGVkIGJ5IGNvdWNoZGIsIGJ1dCBpcyBieSBub2RlOgogICAgICAgICAgICAgICAgLy9tLnJlcXVpcmUgPSBleHBvcnRzLmNyZWF0ZVJlcXVpcmUocGF0aCk7CiAgICAgICAgICAgICAgICAvLyBUT0RPOiBwcm9wZXJ0eSBub3QgcHJvdmlkZWQgYnkgY291Y2hkYiwgYnV0IGlzIGJ5IG5vZGU6CiAgICAgICAgICAgICAgICAvL20uZmlsZW5hbWUgPSAnJzsKICAgICAgICAgICAgICAgIC8vIFRPRE86IG1vZHVsZSBwcm9wZXJ0aWVzIHByb3ZpZGVkIGJ5IGNvdWNoZGIsIGJ1dCBub3QgYnkga2Fuc28KICAgICAgICAgICAgICAgIC8vICogY3VycmVudAogICAgICAgICAgICAgICAgLy8gKiBwYXJlbnQKICAgICAgICAgICAgICAgIC8vIHNldCB0aGlzIHRvIHRydWUgKmJlZm9yZSogY2FsbGluZyBtLmxvYWQgc28gY2lyY3VsYXIKICAgICAgICAgICAgICAgIC8vIHJlcXVpcmVzIGRvbid0IGJsb3cgdGhlIGNhbGwgc3RhY2sKICAgICAgICAgICAgICAgIG0ubG9hZGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgIC8vbS5sb2FkKG0sIG0uZXhwb3J0cywgbS5yZXF1aXJlKTsKICAgICAgICAgICAgICAgIG0ubG9hZChtLCBtLmV4cG9ydHMsIGV4cG9ydHMuY3JlYXRlUmVxdWlyZShwYXRoKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG0uZXhwb3J0czsKICAgICAgICB9OwogICAgfTsKCiAgICBpZiAodHlwZW9mIHJlcXVpcmUgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgLy8gbWFrZSByZXF1aXJlIGF2YWlsYWJsZSBnbG9iYWxseSwgdW5sZXNzIGFscmVhZHkgaW4gYSBjb21tb25qcwogICAgICAgIC8vIGVudmlyb25tZW50CiAgICAgICAgdGhpcy5yZXF1aXJlID0gZXhwb3J0cy5jcmVhdGVSZXF1aXJlKCcnKTsKICAgIH0KCn0oKHR5cGVvZiBleHBvcnRzID09PSAndW5kZWZpbmVkJykgPyB0aGlzLmthbnNvID0ge306IG1vZHVsZS5leHBvcnRzKSk7CgoKLyoqCiAqIENvbW1vbkpTIG1vZHVsZXMgYXJlIHdyYXBwZWQgYW5kIGFwcGVuZGVkIHRvIHRoaXMgZmlsZS4KICovCi8qKioqKioqKioqIGxpYi9pbmRleCAqKioqKioqKioqLwoKa2Fuc28ubW9kdWxlQ2FjaGVbImxpYi9pbmRleCJdID0ge2xvYWQ6IChmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzLCByZXF1aXJlKSB7CgpleHBvcnRzLnZpZXdzID0gcmVxdWlyZSgnLi92aWV3cycpOwpleHBvcnRzLmZpbHRlcnMgPSByZXF1aXJlKCcuL2ZpbHRlcnMnKTsKCgp9KX07CgovKioqKioqKioqKiBsaWIvdmlld3MgKioqKioqKioqKi8KCmthbnNvLm1vZHVsZUNhY2hlWyJsaWIvdmlld3MiXSA9IHtsb2FkOiAoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cywgcmVxdWlyZSkgewoKZXhwb3J0cy5kdWVfdGFza3MgPSB7CiAgICBtYXA6IGZ1bmN0aW9uKGRvYykgewogICAgICAgIHZhciB0YXNrcyA9IGRvYy5zY2hlZHVsZWRfdGFza3MgfHwgW107CgogICAgICAgIHRhc2tzLmZvckVhY2goZnVuY3Rpb24odGFzaywgaW5kZXgpIHsKICAgICAgICAgICAgaWYgKHRhc2suZHVlKSB7CiAgICAgICAgICAgICAgICBlbWl0KHRhc2suZHVlLCBpbmRleCk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0KfTsKCi8qCiAqIEdldCBjbGluaWMgYmFzZWQgb24gcGhvbmUgbnVtYmVyCiAqLwpleHBvcnRzLmNsaW5pY19ieV9waG9uZSA9IHsKICAgIG1hcDogZnVuY3Rpb24oZG9jKSB7CiAgICAgICAgaWYgKGRvYy50eXBlID09PSAnY2xpbmljJyAmJiBkb2MuY29udGFjdCAmJiBkb2MuY29udGFjdC5waG9uZSkgewogICAgICAgICAgICBlbWl0KFtkb2MuY29udGFjdC5waG9uZV0sIG51bGwpOwogICAgICAgIH0KICAgIH0KfTsKCi8qCiAqIEdldCBjbGluaWMgYmFzZWQgb24gcmVmZXJlbmNlIGlkCiAqLwpleHBvcnRzLmNsaW5pY19ieV9yZWZpZCA9IHsKICAgIG1hcDogZnVuY3Rpb24gKGRvYykgewogICAgICAgIGlmIChkb2MudHlwZSA9PT0gJ2NsaW5pYycgJiYgZG9jLmNvbnRhY3QgJiYgZG9jLmNvbnRhY3QucmNfY29kZSkgewogICAgICAgICAgICAvLyBuZWVkIFN0cmluZyBiZWNhdXNlIHJld3JpdGVyIHdyYXBzIGV2ZXJ5dGhpbmcgaW4gcXVvdGVzCiAgICAgICAgICAgIGVtaXQoW1N0cmluZyhkb2MuY29udGFjdC5yY19jb2RlKV0sIG51bGwpOwogICAgICAgIH0KICAgIH0KfTsKCmV4cG9ydHMud2Vla2x5X3JlbWluZGVycyA9IHsKICBtYXA6IGZ1bmN0aW9uKGRvYykgewogICAgdmFyIHBob25lLAogICAgICAgIHJlZmlkOwoKICAgIGlmIChkb2MuZm9ybSAmJiBkb2Mud2Vla19udW1iZXIgJiYgZG9jLnllYXIpIHsKICAgICAgcGhvbmUgPSBkb2MucmVsYXRlZF9lbnRpdGllcyAmJiBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWMgJiYgZG9jLnJlbGF0ZWRfZW50aXRpZXMuY2xpbmljLmNvbnRhY3QgJiYKICAgICAgICBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWMuY29udGFjdC5waG9uZTsKICAgICAgaWYgKHBob25lKSB7CiAgICAgICAgZW1pdChbZG9jLmZvcm0sIGRvYy55ZWFyLCBkb2Mud2Vla19udW1iZXIsIHBob25lXSwgewogICAgICAgICAgcmVjZWl2ZWQ6IHRydWUKICAgICAgICB9KTsKICAgICAgfQogICAgfSBlbHNlIGlmIChkb2MudHlwZSA9PT0gJ3dlZWtseV9yZW1pbmRlcicgJiYgZG9jLnJlbGF0ZWRfZm9ybSAmJiBkb2Mud2VlayAmJiBkb2MueWVhcikgewogICAgICBlbWl0KFtkb2MucmVsYXRlZF9mb3JtLCBkb2MueWVhciwgZG9jLndlZWssIGRvYy5waG9uZV0sIHsKICAgICAgICBzZW50OiBkb2MuZGF5CiAgICAgIH0pOwogICAgfQogIH0sCiAgcmVkdWNlOiBmdW5jdGlvbihrZXlzLCB2YWx1ZXMpIHsKICAgIHZhciByZXN1bHQgPSB7CiAgICAgIHJlY2VpdmVkOiBmYWxzZSwKICAgICAgc2VudDogW10KICAgIH07CgogICAgdmFsdWVzLmZvckVhY2goZnVuY3Rpb24odmFsdWUpIHsKICAgICAgaWYgKHZhbHVlLnNlbnQpIHsKICAgICAgICByZXN1bHQuc2VudC5wdXNoKHZhbHVlLnNlbnQpOwogICAgICB9CiAgICAgIHJlc3VsdC5yZWNlaXZlZCA9IHJlc3VsdC5yZWNlaXZlZCB8fCAhIXZhbHVlLnJlY2VpdmVkOwogICAgfSk7CiAgICByZXR1cm4gcmVzdWx0OwogIH0KfQoKZXhwb3J0cy5vaHdfcmVnaXN0ZXJlZF9wYXRpZW50cyA9IHsKICAgIG1hcDogZnVuY3Rpb24oZG9jKSB7CiAgICAgICAgdmFyIGlkcyA9IGRvYy5wYXRpZW50X2lkZW50aWZpZXJzIHx8IFtdOwoKICAgICAgICBpZiAoZG9jLmZvcm0gPT09ICdPUlBUJykgewogICAgICAgICAgICBpZHMuZm9yRWFjaChmdW5jdGlvbihpZCkgewogICAgICAgICAgICAgICAgZW1pdChpZCwgbnVsbCk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0KfTsKCgp9KX07CgovKioqKioqKioqKiBsaWIvZmlsdGVycyAqKioqKioqKioqLwoKa2Fuc28ubW9kdWxlQ2FjaGVbImxpYi9maWx0ZXJzIl0gPSB7bG9hZDogKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMsIHJlcXVpcmUpIHsKCmV4cG9ydHMudXBkYXRlX2NsaW5pY3MgPSBmdW5jdGlvbihkb2MpIHsKICAgIHJldHVybiBkb2MuZm9ybSAmJgogICAgICAgIGRvYy5yZWxhdGVkX2VudGl0aWVzICYmCiAgICAgICAgIWRvYy5yZWxhdGVkX2VudGl0aWVzLmNsaW5pYzsKfTsKCmV4cG9ydHMub2h3X2FuY19yZXBvcnQgPSBmdW5jdGlvbihkb2MpIHsKICAgIHZhciB0cmFuc2l0aW9ucyA9IHJlcXVpcmUoJ2ZpbHRlcnMvbGliL3RyYW5zaXRpb24nKTsKCiAgICByZXR1cm4gdHJhbnNpdGlvbnMuY2hlY2soZG9jKSB8fCBkb2MuZm9ybSA9PT0gJ09BTkMnICYmCiAgICAgICAgZG9jLnJlbGF0ZWRfZW50aXRpZXMgJiYKICAgICAgICBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWM7Cn07CgpleHBvcnRzLm9od19wbmNfcmVwb3J0ID0gZnVuY3Rpb24oZG9jKSB7CiAgICByZXR1cm4gZG9jLmZvcm0gPT09ICdPUE5DJyAmJgogICAgICAgIGRvYy5yZWxhdGVkX2VudGl0aWVzICYmCiAgICAgICAgZG9jLnJlbGF0ZWRfZW50aXRpZXMuY2xpbmljOwp9OwoKZXhwb3J0cy5vaHdfYmlydGhfcmVwb3J0ID0gZnVuY3Rpb24oZG9jKSB7CiAgICByZXR1cm4gZG9jLmZvcm0gPT09ICdPQklSJyAmJgogICAgICAgIGRvYy5wYXRpZW50X2lkICYmCiAgICAgICAgZG9jLnJlbGF0ZWRfZW50aXRpZXMgJiYKICAgICAgICBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWM7Cn07CgpleHBvcnRzLm9od19kYW5nZXJfc2lnbiA9IGZ1bmN0aW9uKGRvYykgewogICAgcmV0dXJuIGRvYy5mb3JtID09PSAnT0RHUicgJiYKICAgICAgICBkb2MucGF0aWVudF9pZCAmJgogICAgICAgIGRvYy5yZWxhdGVkX2VudGl0aWVzICYmCiAgICAgICAgZG9jLnJlbGF0ZWRfZW50aXRpZXMuY2xpbmljOwp9OwoKZXhwb3J0cy5vaHdfbGFib3JfcmVwb3J0ID0gZnVuY3Rpb24oZG9jKSB7CiAgICByZXR1cm4gZG9jLmZvcm0gPT09ICdPTEFCJyAmJgogICAgICAgIGRvYy5wYXRpZW50X2lkICYmCiAgICAgICAgZG9jLnJlbGF0ZWRfZW50aXRpZXMgJiYKICAgICAgICBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWM7Cn07CgpleHBvcnRzLm9od19ub3RpZmljYXRpb25zID0gZnVuY3Rpb24oZG9jKSB7CiAgICByZXR1cm4gZG9jLmZvcm0gPT09ICdPTk9UJyAmJgogICAgICAgIGRvYy5wYXRpZW50X2lkICYmCiAgICAgICAgZG9jLnJlbGF0ZWRfZW50aXRpZXMgJiYKICAgICAgICBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWM7Cn07CgpleHBvcnRzLm9od19yZWdpc3RyYXRpb24gPSBmdW5jdGlvbihkb2MpIHsKICAgIHJldHVybiBkb2MuZm9ybSA9PT0gJ09SUFQnICYmCiAgICAgICAgZG9jLnJlbGF0ZWRfZW50aXRpZXMgJiYKICAgICAgICBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWMgJiYKICAgICAgICAoIWRvYy5wYXRpZW50X2lkZW50aWZpZXJzIHx8IGRvYy5wYXRpZW50X2lkZW50aWZpZXJzLmxlbmd0aCA9PT0gMCk7Cn07CgpleHBvcnRzLnR3aWxpb19tZXNzYWdlID0gZnVuY3Rpb24oZG9jKSB7CiAgICB2YXIgdGFza3MgPSBkb2MudGFza3MgfHwgW107CgogICAgcmV0dXJuIHRhc2tzLnNvbWUoZnVuY3Rpb24odGFzaykgewogICAgICAgIHJldHVybiB0YXNrLnN0YXRlID09PSAncGVuZGluZyc7CiAgICB9KTsKfTsKCgp9KX07CgovKioqKioqKioqKiBmaWx0ZXJzL2xpYi90cmFuc2l0aW9uICoqKioqKioqKiovCgprYW5zby5tb2R1bGVDYWNoZVsiZmlsdGVycy9saWIvdHJhbnNpdGlvbiJdID0ge2xvYWQ6IChmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzLCByZXF1aXJlKSB7CgpleHBvcnRzLmNoZWNrID0gZnVuY3Rpb24oZG9jLCBrZXkpIHsKICAgIHJldHVybiBmYWxzZTsKfQoKCn0pfTsKCg=="
        }
    },
    "kanso": {
        "config": {
            "name": "kujua-sentinel",
            "version": "0.0.1",
            "description": "Kujua Sentinel",
            "modules": [
                "lib",
                "filters"
            ],
            "load": "lib/index",
            "dependencies": {
                "modules": null,
                "properties": null
            },
            "minify": false
        },
        "build_time": "2012-12-09T22:57:04Z",
        "kanso_version": "0.2.2"
    }
}
